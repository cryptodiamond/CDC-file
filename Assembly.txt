.code
  PUSH 60			contract CryptoDiamondCoin is ...
  PUSH 40			contract CryptoDiamondCoin is ...
  MSTORE 			contract CryptoDiamondCoin is ...
  CALLER 			msg.sender
  PUSH 1			address owner = msg.sender
  PUSH 0			address owner = msg.sender
  PUSH 100			address owner = msg.sender
  EXP 			address owner = msg.sender
  DUP2 			address owner = msg.sender
  SLOAD 			address owner = msg.sender
  DUP2 			address owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address owner = msg.sender
  MUL 			address owner = msg.sender
  NOT 			address owner = msg.sender
  AND 			address owner = msg.sender
  SWAP1 			address owner = msg.sender
  DUP4 			address owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address owner = msg.sender
  AND 			address owner = msg.sender
  MUL 			address owner = msg.sender
  OR 			address owner = msg.sender
  SWAP1 			address owner = msg.sender
  SSTORE 			address owner = msg.sender
  POP 			address owner = msg.sender
  PUSH 183BDAC6AE9BC1C8CC000000			7500000000e18
  PUSH 4			uint256 public totalSupply = 7...
  SSTORE 			uint256 public totalSupply = 7...
  PUSH 0			0
  PUSH 5			uint256 public totalDistribute...
  SSTORE 			uint256 public totalDistribute...
  PUSH 422CA8B0A00A425000000			5000000e18
  PUSH 6			uint256 public tokensPerEth = ...
  SSTORE 			uint256 public tokensPerEth = ...
  PUSH 0			false
  PUSH 7			bool public distributionFinish...
  PUSH 0			bool public distributionFinish...
  PUSH 100			bool public distributionFinish...
  EXP 			bool public distributionFinish...
  DUP2 			bool public distributionFinish...
  SLOAD 			bool public distributionFinish...
  DUP2 			bool public distributionFinish...
  PUSH FF			bool public distributionFinish...
  MUL 			bool public distributionFinish...
  NOT 			bool public distributionFinish...
  AND 			bool public distributionFinish...
  SWAP1 			bool public distributionFinish...
  DUP4 			bool public distributionFinish...
  ISZERO 			bool public distributionFinish...
  ISZERO 			bool public distributionFinish...
  MUL 			bool public distributionFinish...
  OR 			bool public distributionFinish...
  SWAP1 			bool public distributionFinish...
  SSTORE 			bool public distributionFinish...
  POP 			bool public distributionFinish...
  CALLVALUE 			function CryptoDiamondCoin () ...
  ISZERO 			function CryptoDiamondCoin () ...
  PUSH [tag] 1			function CryptoDiamondCoin () ...
  JUMPI 			function CryptoDiamondCoin () ...
  PUSH 0			function CryptoDiamondCoin () ...
  DUP1 			function CryptoDiamondCoin () ...
  REVERT 			function CryptoDiamondCoin () ...
tag 1			function CryptoDiamondCoin () ...
  JUMPDEST 			function CryptoDiamondCoin () ...
  PUSH 0			uint256 devTokens
  CALLER 			msg.sender
  PUSH 1			owner
  PUSH 0			owner
  PUSH 100			owner = msg.sender
  EXP 			owner = msg.sender
  DUP2 			owner = msg.sender
  SLOAD 			owner = msg.sender
  DUP2 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  MUL 			owner = msg.sender
  NOT 			owner = msg.sender
  AND 			owner = msg.sender
  SWAP1 			owner = msg.sender
  DUP4 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  AND 			owner = msg.sender
  MUL 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  POP 			owner = msg.sender
  PUSH 4D8C55AEFB8C05B5C000000			1500000000e18
  SWAP1 			uint256 devTokens = 1500000000...
  POP 			uint256 devTokens = 1500000000...
  PUSH [tag] 4			distr(owner, devTokens)
  PUSH 1			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  DUP3 			devTokens
  PUSH [tag] 5			distr
  PUSH 100000000			distr
  MUL 			distr
  PUSH [tag] 18446744073709551730			distr
  OR 			distr
  PUSH 100000000			distr(owner, devTokens)
  SWAP1 			distr(owner, devTokens)
  DIV 			distr(owner, devTokens)
  JUMP [in]			distr(owner, devTokens)
tag 4			distr(owner, devTokens)
  JUMPDEST 			distr(owner, devTokens)
  POP 			distr(owner, devTokens)
  POP 			function CryptoDiamondCoin () ...
  PUSH [tag] 6			contract CryptoDiamondCoin is ...
  JUMP 			contract CryptoDiamondCoin is ...
tag 5			function distr(address _to, ui...
  JUMPDEST 			function distr(address _to, ui...
  PUSH 0			bool
  PUSH 7			distributionFinished
  PUSH 0			distributionFinished
  SWAP1 			distributionFinished
  SLOAD 			distributionFinished
  SWAP1 			distributionFinished
  PUSH 100			distributionFinished
  EXP 			distributionFinished
  SWAP1 			distributionFinished
  DIV 			distributionFinished
  PUSH FF			distributionFinished
  AND 			distributionFinished
  ISZERO 			!distributionFinished
  ISZERO 			require(!distributionFinished)
  ISZERO 			require(!distributionFinished)
  PUSH [tag] 8			require(!distributionFinished)
  JUMPI 			require(!distributionFinished)
  PUSH 0			require(!distributionFinished)
  DUP1 			require(!distributionFinished)
  REVERT 			require(!distributionFinished)
tag 8			require(!distributionFinished)
  JUMPDEST 			require(!distributionFinished)
  PUSH [tag] 10			totalDistributed.add(_amount)
  DUP3 			_amount
  PUSH 5			totalDistributed
  SLOAD 			totalDistributed
  PUSH [tag] 11			totalDistributed.add
  PUSH 100000000			totalDistributed.add
  MUL 			totalDistributed.add
  PUSH [tag] 18446744073709551752			totalDistributed.add
  OR 			totalDistributed.add
  SWAP1 			totalDistributed.add
  SWAP2 			totalDistributed.add(_amount)
  SWAP1 			totalDistributed.add(_amount)
  PUSH 100000000			totalDistributed.add(_amount)
  SWAP1 			totalDistributed.add(_amount)
  DIV 			totalDistributed.add(_amount)
  JUMP [in]			totalDistributed.add(_amount)
tag 10			totalDistributed.add(_amount)
  JUMPDEST 			totalDistributed.add(_amount)
  PUSH 5			totalDistributed
  DUP2 			totalDistributed = totalDistri...
  SWAP1 			totalDistributed = totalDistri...
  SSTORE 			totalDistributed = totalDistri...
  POP 			totalDistributed = totalDistri...
  PUSH [tag] 12			balances[_to].add(_amount)
  DUP3 			_amount
  PUSH 2			balances
  PUSH 0			balances[_to]
  DUP7 			_to
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
  AND 			balances[_to]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
  AND 			balances[_to]
  DUP2 			balances[_to]
  MSTORE 			balances[_to]
  PUSH 20			balances[_to]
  ADD 			balances[_to]
  SWAP1 			balances[_to]
  DUP2 			balances[_to]
  MSTORE 			balances[_to]
  PUSH 20			balances[_to]
  ADD 			balances[_to]
  PUSH 0			balances[_to]
  KECCAK256 			balances[_to]
  SLOAD 			balances[_to]
  PUSH [tag] 11			balances[_to].add
  PUSH 100000000			balances[_to].add
  MUL 			balances[_to].add
  PUSH [tag] 18446744073709551752			balances[_to].add
  OR 			balances[_to].add
  SWAP1 			balances[_to].add
  SWAP2 			balances[_to].add(_amount)
  SWAP1 			balances[_to].add(_amount)
  PUSH 100000000			balances[_to].add(_amount)
  SWAP1 			balances[_to].add(_amount)
  DIV 			balances[_to].add(_amount)
  JUMP [in]			balances[_to].add(_amount)
tag 12			balances[_to].add(_amount)
  JUMPDEST 			balances[_to].add(_amount)
  PUSH 2			balances
  PUSH 0			balances[_to]
  DUP6 			_to
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
  AND 			balances[_to]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
  AND 			balances[_to]
  DUP2 			balances[_to]
  MSTORE 			balances[_to]
  PUSH 20			balances[_to]
  ADD 			balances[_to]
  SWAP1 			balances[_to]
  DUP2 			balances[_to]
  MSTORE 			balances[_to]
  PUSH 20			balances[_to]
  ADD 			balances[_to]
  PUSH 0			balances[_to]
  KECCAK256 			balances[_to]
  DUP2 			balances[_to] = balances[_to]....
  SWAP1 			balances[_to] = balances[_to]....
  SSTORE 			balances[_to] = balances[_to]....
  POP 			balances[_to] = balances[_to]....
  DUP3 			_to
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Distr(_to, _amount)
  AND 			Distr(_to, _amount)
  PUSH 8940C4B8E215F8822C5C8F0056C12652C746CBC57EEDBD2A440B175971D47A77			Distr(_to, _amount)
  DUP4 			_amount
  PUSH 40			Distr(_to, _amount)
  MLOAD 			Distr(_to, _amount)
  DUP1 			Distr(_to, _amount)
  DUP3 			Distr(_to, _amount)
  DUP2 			Distr(_to, _amount)
  MSTORE 			Distr(_to, _amount)
  PUSH 20			Distr(_to, _amount)
  ADD 			Distr(_to, _amount)
  SWAP2 			Distr(_to, _amount)
  POP 			Distr(_to, _amount)
  POP 			Distr(_to, _amount)
  PUSH 40			Distr(_to, _amount)
  MLOAD 			Distr(_to, _amount)
  DUP1 			Distr(_to, _amount)
  SWAP2 			Distr(_to, _amount)
  SUB 			Distr(_to, _amount)
  SWAP1 			Distr(_to, _amount)
  LOG2 			Distr(_to, _amount)
  DUP3 			_to
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _to, _amo...
  AND 			Transfer(address(0), _to, _amo...
  PUSH 0			0
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _to, _amo...
  AND 			Transfer(address(0), _to, _amo...
  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(0), _to, _amo...
  DUP5 			_amount
  PUSH 40			Transfer(address(0), _to, _amo...
  MLOAD 			Transfer(address(0), _to, _amo...
  DUP1 			Transfer(address(0), _to, _amo...
  DUP3 			Transfer(address(0), _to, _amo...
  DUP2 			Transfer(address(0), _to, _amo...
  MSTORE 			Transfer(address(0), _to, _amo...
  PUSH 20			Transfer(address(0), _to, _amo...
  ADD 			Transfer(address(0), _to, _amo...
  SWAP2 			Transfer(address(0), _to, _amo...
  POP 			Transfer(address(0), _to, _amo...
  POP 			Transfer(address(0), _to, _amo...
  PUSH 40			Transfer(address(0), _to, _amo...
  MLOAD 			Transfer(address(0), _to, _amo...
  DUP1 			Transfer(address(0), _to, _amo...
  SWAP2 			Transfer(address(0), _to, _amo...
  SUB 			Transfer(address(0), _to, _amo...
  SWAP1 			Transfer(address(0), _to, _amo...
  LOG3 			Transfer(address(0), _to, _amo...
  PUSH 1			true
  SWAP1 			return true
  POP 			return true
  SWAP3 			function distr(address _to, ui...
  SWAP2 			function distr(address _to, ui...
  POP 			function distr(address _to, ui...
  POP 			function distr(address _to, ui...
  JUMP [out]			function distr(address _to, ui...
tag 11			function add(uint256 a, uint25...
  JUMPDEST 			function add(uint256 a, uint25...
  PUSH 0			uint256 c
  DUP2 			b
  DUP4 			a
  ADD 			a + b
  SWAP1 			c = a + b
  POP 			c = a + b
  DUP3 			a
  DUP2 			c
  LT 			c >= a
  ISZERO 			c >= a
  ISZERO 			assert(c >= a)
  ISZERO 			assert(c >= a)
  PUSH [tag] 14			assert(c >= a)
  JUMPI 			assert(c >= a)
  INVALID 			assert(c >= a)
tag 14			assert(c >= a)
  JUMPDEST 			assert(c >= a)
  DUP1 			c
  SWAP1 			return c
  POP 			return c
  SWAP3 			function add(uint256 a, uint25...
  SWAP2 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  JUMP [out]			function add(uint256 a, uint25...
tag 6			contract CryptoDiamondCoin is ...
  JUMPDEST 			contract CryptoDiamondCoin is ...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract CryptoDiamondCoin is ...
  DUP1 			contract CryptoDiamondCoin is ...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract CryptoDiamondCoin is ...
  PUSH 0			contract CryptoDiamondCoin is ...
  CODECOPY 			contract CryptoDiamondCoin is ...
  PUSH 0			contract CryptoDiamondCoin is ...
  RETURN 			contract CryptoDiamondCoin is ...
.data
  0:
    .code
      PUSH 60			contract CryptoDiamondCoin is ...
      PUSH 40			contract CryptoDiamondCoin is ...
      MSTORE 			contract CryptoDiamondCoin is ...
      PUSH 4			contract CryptoDiamondCoin is ...
      CALLDATASIZE 			contract CryptoDiamondCoin is ...
      LT 			contract CryptoDiamondCoin is ...
      PUSH [tag] 1			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      PUSH 0			contract CryptoDiamondCoin is ...
      CALLDATALOAD 			contract CryptoDiamondCoin is ...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract CryptoDiamondCoin is ...
      SWAP1 			contract CryptoDiamondCoin is ...
      DIV 			contract CryptoDiamondCoin is ...
      PUSH FFFFFFFF			contract CryptoDiamondCoin is ...
      AND 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 6FDDE03			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 2			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 95EA7B3			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 3			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 18160DDD			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 4			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 2195845F			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 5			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 23B872DD			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 6			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 313CE567			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 7			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 3CCFD60B			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 8			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 42966C68			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 9			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 4A63464D			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 10			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 67220FD7			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 11			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 70A08231			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 12			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 95D89B41			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 13			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 9B1CBCCC			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 14			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH 9EA407BE			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 15			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH A9059CBB			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 16			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH AA6CA808			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 17			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH AAFFADF3			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 18			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH C108D542			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 19			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH C489744B			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 20			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH CBDD69B5			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 21			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH DD62ED3E			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 22			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH EFCA2EED			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 23			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
      DUP1 			contract CryptoDiamondCoin is ...
      PUSH F2FDE38B			contract CryptoDiamondCoin is ...
      EQ 			contract CryptoDiamondCoin is ...
      PUSH [tag] 24			contract CryptoDiamondCoin is ...
      JUMPI 			contract CryptoDiamondCoin is ...
    tag 1			contract CryptoDiamondCoin is ...
      JUMPDEST 			contract CryptoDiamondCoin is ...
      PUSH [tag] 27			getTokens()
      PUSH [tag] 28			getTokens
      JUMP [in]			getTokens()
    tag 27			getTokens()
      JUMPDEST 			getTokens()
      STOP 			contract CryptoDiamondCoin is ...
    tag 2			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      CALLVALUE 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 29			string public constant name = ...
      JUMPI 			string public constant name = ...
      PUSH 0			string public constant name = ...
      DUP1 			string public constant name = ...
      REVERT 			string public constant name = ...
    tag 29			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH [tag] 30			string public constant name = ...
      PUSH [tag] 31			string public constant name = ...
      JUMP 			string public constant name = ...
    tag 30			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      DUP3 			string public constant name = ...
      DUP2 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP3 			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP2 			string public constant name = ...
      DUP2 			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 0			;
    tag 32			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @tit...
      DUP4 			@ti
      DUP2 			 
      LT 			**\n * @tit
      ISZERO 			olidity ^0.4.18;\n
/**
 * @tit...
      PUSH [tag] 33			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPI 			olidity ^0.4.18;\n
/**
 * @tit...
      DUP1 			w
      DUP3 			ies
      ADD 			tiplies two
      MLOAD 			 * Multiplies two 
      DUP2 			\n
      DUP5 			  /
      ADD 			\n
    /**
 
      MSTORE 			eMath {\n
    /**
    * Multip...
      PUSH 20			\nl
      DUP2 			 
      ADD 			ath\n */
li
      SWAP1 			SafeMath\n */
li
      POP 			SafeMath\n */
li
      PUSH [tag] 32			olidity ^0.4.18;\n
/**
 * @tit...
      JUMP 			olidity ^0.4.18;\n
/**
 * @tit...
    tag 33			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @tit...
      POP 			ity ^0.4.18;\n

      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 1F			string public constant name = ...
      AND 			string public constant name = ...
      DUP1 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 35			string public constant name = ...
      JUMPI 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP3 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      PUSH 1			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 20			string public constant name = ...
      SUB 			string public constant name = ...
      PUSH 100			string public constant name = ...
      EXP 			string public constant name = ...
      SUB 			string public constant name = ...
      NOT 			string public constant name = ...
      AND 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
    tag 35			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP3 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      SWAP2 			string public constant name = ...
      SUB 			string public constant name = ...
      SWAP1 			string public constant name = ...
      RETURN 			string public constant name = ...
    tag 3			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      CALLVALUE 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      PUSH [tag] 36			function approve(address _spen...
      JUMPI 			function approve(address _spen...
      PUSH 0			function approve(address _spen...
      DUP1 			function approve(address _spen...
      REVERT 			function approve(address _spen...
    tag 36			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH [tag] 37			function approve(address _spen...
      PUSH 4			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function approve(address _spen...
      AND 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH [tag] 38			function approve(address _spen...
      JUMP 			function approve(address _spen...
    tag 37			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP3 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      MSTORE 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SUB 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      RETURN 			function approve(address _spen...
    tag 4			uint256 public totalSupply = 7...
      JUMPDEST 			uint256 public totalSupply = 7...
      CALLVALUE 			uint256 public totalSupply = 7...
      ISZERO 			uint256 public totalSupply = 7...
      PUSH [tag] 39			uint256 public totalSupply = 7...
      JUMPI 			uint256 public totalSupply = 7...
      PUSH 0			uint256 public totalSupply = 7...
      DUP1 			uint256 public totalSupply = 7...
      REVERT 			uint256 public totalSupply = 7...
    tag 39			uint256 public totalSupply = 7...
      JUMPDEST 			uint256 public totalSupply = 7...
      PUSH [tag] 40			uint256 public totalSupply = 7...
      PUSH [tag] 41			uint256 public totalSupply = 7...
      JUMP 			uint256 public totalSupply = 7...
    tag 40			uint256 public totalSupply = 7...
      JUMPDEST 			uint256 public totalSupply = 7...
      PUSH 40			uint256 public totalSupply = 7...
      MLOAD 			uint256 public totalSupply = 7...
      DUP1 			uint256 public totalSupply = 7...
      DUP3 			uint256 public totalSupply = 7...
      DUP2 			uint256 public totalSupply = 7...
      MSTORE 			uint256 public totalSupply = 7...
      PUSH 20			uint256 public totalSupply = 7...
      ADD 			uint256 public totalSupply = 7...
      SWAP2 			uint256 public totalSupply = 7...
      POP 			uint256 public totalSupply = 7...
      POP 			uint256 public totalSupply = 7...
      PUSH 40			uint256 public totalSupply = 7...
      MLOAD 			uint256 public totalSupply = 7...
      DUP1 			uint256 public totalSupply = 7...
      SWAP2 			uint256 public totalSupply = 7...
      SUB 			uint256 public totalSupply = 7...
      SWAP1 			uint256 public totalSupply = 7...
      RETURN 			uint256 public totalSupply = 7...
    tag 5			function withdrawAltcoinTokens...
      JUMPDEST 			function withdrawAltcoinTokens...
      CALLVALUE 			function withdrawAltcoinTokens...
      ISZERO 			function withdrawAltcoinTokens...
      PUSH [tag] 42			function withdrawAltcoinTokens...
      JUMPI 			function withdrawAltcoinTokens...
      PUSH 0			function withdrawAltcoinTokens...
      DUP1 			function withdrawAltcoinTokens...
      REVERT 			function withdrawAltcoinTokens...
    tag 42			function withdrawAltcoinTokens...
      JUMPDEST 			function withdrawAltcoinTokens...
      PUSH [tag] 43			function withdrawAltcoinTokens...
      PUSH 4			function withdrawAltcoinTokens...
      DUP1 			function withdrawAltcoinTokens...
      DUP1 			function withdrawAltcoinTokens...
      CALLDATALOAD 			function withdrawAltcoinTokens...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function withdrawAltcoinTokens...
      AND 			function withdrawAltcoinTokens...
      SWAP1 			function withdrawAltcoinTokens...
      PUSH 20			function withdrawAltcoinTokens...
      ADD 			function withdrawAltcoinTokens...
      SWAP1 			function withdrawAltcoinTokens...
      SWAP2 			function withdrawAltcoinTokens...
      SWAP1 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      PUSH [tag] 44			function withdrawAltcoinTokens...
      JUMP 			function withdrawAltcoinTokens...
    tag 43			function withdrawAltcoinTokens...
      JUMPDEST 			function withdrawAltcoinTokens...
      PUSH 40			function withdrawAltcoinTokens...
      MLOAD 			function withdrawAltcoinTokens...
      DUP1 			function withdrawAltcoinTokens...
      DUP3 			function withdrawAltcoinTokens...
      ISZERO 			function withdrawAltcoinTokens...
      ISZERO 			function withdrawAltcoinTokens...
      ISZERO 			function withdrawAltcoinTokens...
      ISZERO 			function withdrawAltcoinTokens...
      DUP2 			function withdrawAltcoinTokens...
      MSTORE 			function withdrawAltcoinTokens...
      PUSH 20			function withdrawAltcoinTokens...
      ADD 			function withdrawAltcoinTokens...
      SWAP2 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      PUSH 40			function withdrawAltcoinTokens...
      MLOAD 			function withdrawAltcoinTokens...
      DUP1 			function withdrawAltcoinTokens...
      SWAP2 			function withdrawAltcoinTokens...
      SUB 			function withdrawAltcoinTokens...
      SWAP1 			function withdrawAltcoinTokens...
      RETURN 			function withdrawAltcoinTokens...
    tag 6			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      CALLVALUE 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      PUSH [tag] 45			function transferFrom(address ...
      JUMPI 			function transferFrom(address ...
      PUSH 0			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      REVERT 			function transferFrom(address ...
    tag 45			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH [tag] 46			function transferFrom(address ...
      PUSH 4			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH [tag] 47			function transferFrom(address ...
      JUMP 			function transferFrom(address ...
    tag 46			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP3 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      MSTORE 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      RETURN 			function transferFrom(address ...
    tag 7			uint public constant decimals ...
      JUMPDEST 			uint public constant decimals ...
      CALLVALUE 			uint public constant decimals ...
      ISZERO 			uint public constant decimals ...
      PUSH [tag] 48			uint public constant decimals ...
      JUMPI 			uint public constant decimals ...
      PUSH 0			uint public constant decimals ...
      DUP1 			uint public constant decimals ...
      REVERT 			uint public constant decimals ...
    tag 48			uint public constant decimals ...
      JUMPDEST 			uint public constant decimals ...
      PUSH [tag] 49			uint public constant decimals ...
      PUSH [tag] 50			uint public constant decimals ...
      JUMP 			uint public constant decimals ...
    tag 49			uint public constant decimals ...
      JUMPDEST 			uint public constant decimals ...
      PUSH 40			uint public constant decimals ...
      MLOAD 			uint public constant decimals ...
      DUP1 			uint public constant decimals ...
      DUP3 			uint public constant decimals ...
      DUP2 			uint public constant decimals ...
      MSTORE 			uint public constant decimals ...
      PUSH 20			uint public constant decimals ...
      ADD 			uint public constant decimals ...
      SWAP2 			uint public constant decimals ...
      POP 			uint public constant decimals ...
      POP 			uint public constant decimals ...
      PUSH 40			uint public constant decimals ...
      MLOAD 			uint public constant decimals ...
      DUP1 			uint public constant decimals ...
      SWAP2 			uint public constant decimals ...
      SUB 			uint public constant decimals ...
      SWAP1 			uint public constant decimals ...
      RETURN 			uint public constant decimals ...
    tag 8			function withdraw() onlyOwner ...
      JUMPDEST 			function withdraw() onlyOwner ...
      CALLVALUE 			function withdraw() onlyOwner ...
      ISZERO 			function withdraw() onlyOwner ...
      PUSH [tag] 51			function withdraw() onlyOwner ...
      JUMPI 			function withdraw() onlyOwner ...
      PUSH 0			function withdraw() onlyOwner ...
      DUP1 			function withdraw() onlyOwner ...
      REVERT 			function withdraw() onlyOwner ...
    tag 51			function withdraw() onlyOwner ...
      JUMPDEST 			function withdraw() onlyOwner ...
      PUSH [tag] 52			function withdraw() onlyOwner ...
      PUSH [tag] 53			function withdraw() onlyOwner ...
      JUMP 			function withdraw() onlyOwner ...
    tag 52			function withdraw() onlyOwner ...
      JUMPDEST 			function withdraw() onlyOwner ...
      STOP 			function withdraw() onlyOwner ...
    tag 9			function burn(uint256 _value) ...
      JUMPDEST 			function burn(uint256 _value) ...
      CALLVALUE 			function burn(uint256 _value) ...
      ISZERO 			function burn(uint256 _value) ...
      PUSH [tag] 54			function burn(uint256 _value) ...
      JUMPI 			function burn(uint256 _value) ...
      PUSH 0			function burn(uint256 _value) ...
      DUP1 			function burn(uint256 _value) ...
      REVERT 			function burn(uint256 _value) ...
    tag 54			function burn(uint256 _value) ...
      JUMPDEST 			function burn(uint256 _value) ...
      PUSH [tag] 55			function burn(uint256 _value) ...
      PUSH 4			function burn(uint256 _value) ...
      DUP1 			function burn(uint256 _value) ...
      DUP1 			function burn(uint256 _value) ...
      CALLDATALOAD 			function burn(uint256 _value) ...
      SWAP1 			function burn(uint256 _value) ...
      PUSH 20			function burn(uint256 _value) ...
      ADD 			function burn(uint256 _value) ...
      SWAP1 			function burn(uint256 _value) ...
      SWAP2 			function burn(uint256 _value) ...
      SWAP1 			function burn(uint256 _value) ...
      POP 			function burn(uint256 _value) ...
      POP 			function burn(uint256 _value) ...
      PUSH [tag] 56			function burn(uint256 _value) ...
      JUMP 			function burn(uint256 _value) ...
    tag 55			function burn(uint256 _value) ...
      JUMPDEST 			function burn(uint256 _value) ...
      STOP 			function burn(uint256 _value) ...
    tag 10			function adminClaimAirdrop(add...
      JUMPDEST 			function adminClaimAirdrop(add...
      CALLVALUE 			function adminClaimAirdrop(add...
      ISZERO 			function adminClaimAirdrop(add...
      PUSH [tag] 57			function adminClaimAirdrop(add...
      JUMPI 			function adminClaimAirdrop(add...
      PUSH 0			function adminClaimAirdrop(add...
      DUP1 			function adminClaimAirdrop(add...
      REVERT 			function adminClaimAirdrop(add...
    tag 57			function adminClaimAirdrop(add...
      JUMPDEST 			function adminClaimAirdrop(add...
      PUSH [tag] 58			function adminClaimAirdrop(add...
      PUSH 4			function adminClaimAirdrop(add...
      DUP1 			function adminClaimAirdrop(add...
      DUP1 			function adminClaimAirdrop(add...
      CALLDATALOAD 			function adminClaimAirdrop(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function adminClaimAirdrop(add...
      AND 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      PUSH 20			function adminClaimAirdrop(add...
      ADD 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      SWAP2 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      DUP1 			function adminClaimAirdrop(add...
      CALLDATALOAD 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      PUSH 20			function adminClaimAirdrop(add...
      ADD 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      SWAP2 			function adminClaimAirdrop(add...
      SWAP1 			function adminClaimAirdrop(add...
      POP 			function adminClaimAirdrop(add...
      POP 			function adminClaimAirdrop(add...
      PUSH [tag] 59			function adminClaimAirdrop(add...
      JUMP 			function adminClaimAirdrop(add...
    tag 58			function adminClaimAirdrop(add...
      JUMPDEST 			function adminClaimAirdrop(add...
      STOP 			function adminClaimAirdrop(add...
    tag 11			function adminClaimAirdropMult...
      JUMPDEST 			function adminClaimAirdropMult...
      CALLVALUE 			function adminClaimAirdropMult...
      ISZERO 			function adminClaimAirdropMult...
      PUSH [tag] 60			function adminClaimAirdropMult...
      JUMPI 			function adminClaimAirdropMult...
      PUSH 0			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      REVERT 			function adminClaimAirdropMult...
    tag 60			function adminClaimAirdropMult...
      JUMPDEST 			function adminClaimAirdropMult...
      PUSH [tag] 61			function adminClaimAirdropMult...
      PUSH 4			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      CALLDATALOAD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      DUP3 			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      CALLDATALOAD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      MUL 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      PUSH 40			function adminClaimAirdropMult...
      MLOAD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      DUP2 			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      PUSH 40			function adminClaimAirdropMult...
      MSTORE 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      SWAP4 			function adminClaimAirdropMult...
      SWAP3 			function adminClaimAirdropMult...
      SWAP2 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      DUP2 			function adminClaimAirdropMult...
      DUP2 			function adminClaimAirdropMult...
      MSTORE 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      DUP4 			function adminClaimAirdropMult...
      DUP4 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      MUL 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      DUP3 			function adminClaimAirdropMult...
      DUP5 			function adminClaimAirdropMult...
      CALLDATACOPY 			function adminClaimAirdropMult...
      DUP3 			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      SWAP2 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      SWAP2 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      DUP1 			function adminClaimAirdropMult...
      CALLDATALOAD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      PUSH 20			function adminClaimAirdropMult...
      ADD 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      SWAP2 			function adminClaimAirdropMult...
      SWAP1 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      PUSH [tag] 62			function adminClaimAirdropMult...
      JUMP 			function adminClaimAirdropMult...
    tag 61			function adminClaimAirdropMult...
      JUMPDEST 			function adminClaimAirdropMult...
      STOP 			function adminClaimAirdropMult...
    tag 12			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      ISZERO 			function balanceOf(address _ow...
      PUSH [tag] 63			function balanceOf(address _ow...
      JUMPI 			function balanceOf(address _ow...
      PUSH 0			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      REVERT 			function balanceOf(address _ow...
    tag 63			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH [tag] 64			function balanceOf(address _ow...
      PUSH 4			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH [tag] 65			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 64			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP3 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      MSTORE 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      RETURN 			function balanceOf(address _ow...
    tag 13			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      CALLVALUE 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 66			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      PUSH 0			string public constant symbol ...
      DUP1 			string public constant symbol ...
      REVERT 			string public constant symbol ...
    tag 66			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH [tag] 67			string public constant symbol ...
      PUSH [tag] 68			string public constant symbol ...
      JUMP 			string public constant symbol ...
    tag 67			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 0			;
    tag 69			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @tit...
      DUP4 			@ti
      DUP2 			 
      LT 			**\n * @tit
      ISZERO 			olidity ^0.4.18;\n
/**
 * @tit...
      PUSH [tag] 70			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPI 			olidity ^0.4.18;\n
/**
 * @tit...
      DUP1 			w
      DUP3 			ies
      ADD 			tiplies two
      MLOAD 			 * Multiplies two 
      DUP2 			\n
      DUP5 			  /
      ADD 			\n
    /**
 
      MSTORE 			eMath {\n
    /**
    * Multip...
      PUSH 20			\nl
      DUP2 			 
      ADD 			ath\n */
li
      SWAP1 			SafeMath\n */
li
      POP 			SafeMath\n */
li
      PUSH [tag] 69			olidity ^0.4.18;\n
/**
 * @tit...
      JUMP 			olidity ^0.4.18;\n
/**
 * @tit...
    tag 70			olidity ^0.4.18;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @tit...
      POP 			ity ^0.4.18;\n

      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 1F			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 72			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      PUSH 1			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      SUB 			string public constant symbol ...
      PUSH 100			string public constant symbol ...
      EXP 			string public constant symbol ...
      SUB 			string public constant symbol ...
      NOT 			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
    tag 72			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP3 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      RETURN 			string public constant symbol ...
    tag 14			function finishDistribution() ...
      JUMPDEST 			function finishDistribution() ...
      CALLVALUE 			function finishDistribution() ...
      ISZERO 			function finishDistribution() ...
      PUSH [tag] 73			function finishDistribution() ...
      JUMPI 			function finishDistribution() ...
      PUSH 0			function finishDistribution() ...
      DUP1 			function finishDistribution() ...
      REVERT 			function finishDistribution() ...
    tag 73			function finishDistribution() ...
      JUMPDEST 			function finishDistribution() ...
      PUSH [tag] 74			function finishDistribution() ...
      PUSH [tag] 75			function finishDistribution() ...
      JUMP 			function finishDistribution() ...
    tag 74			function finishDistribution() ...
      JUMPDEST 			function finishDistribution() ...
      PUSH 40			function finishDistribution() ...
      MLOAD 			function finishDistribution() ...
      DUP1 			function finishDistribution() ...
      DUP3 			function finishDistribution() ...
      ISZERO 			function finishDistribution() ...
      ISZERO 			function finishDistribution() ...
      ISZERO 			function finishDistribution() ...
      ISZERO 			function finishDistribution() ...
      DUP2 			function finishDistribution() ...
      MSTORE 			function finishDistribution() ...
      PUSH 20			function finishDistribution() ...
      ADD 			function finishDistribution() ...
      SWAP2 			function finishDistribution() ...
      POP 			function finishDistribution() ...
      POP 			function finishDistribution() ...
      PUSH 40			function finishDistribution() ...
      MLOAD 			function finishDistribution() ...
      DUP1 			function finishDistribution() ...
      SWAP2 			function finishDistribution() ...
      SUB 			function finishDistribution() ...
      SWAP1 			function finishDistribution() ...
      RETURN 			function finishDistribution() ...
    tag 15			function updateTokensPerEth(ui...
      JUMPDEST 			function updateTokensPerEth(ui...
      CALLVALUE 			function updateTokensPerEth(ui...
      ISZERO 			function updateTokensPerEth(ui...
      PUSH [tag] 76			function updateTokensPerEth(ui...
      JUMPI 			function updateTokensPerEth(ui...
      PUSH 0			function updateTokensPerEth(ui...
      DUP1 			function updateTokensPerEth(ui...
      REVERT 			function updateTokensPerEth(ui...
    tag 76			function updateTokensPerEth(ui...
      JUMPDEST 			function updateTokensPerEth(ui...
      PUSH [tag] 77			function updateTokensPerEth(ui...
      PUSH 4			function updateTokensPerEth(ui...
      DUP1 			function updateTokensPerEth(ui...
      DUP1 			function updateTokensPerEth(ui...
      CALLDATALOAD 			function updateTokensPerEth(ui...
      SWAP1 			function updateTokensPerEth(ui...
      PUSH 20			function updateTokensPerEth(ui...
      ADD 			function updateTokensPerEth(ui...
      SWAP1 			function updateTokensPerEth(ui...
      SWAP2 			function updateTokensPerEth(ui...
      SWAP1 			function updateTokensPerEth(ui...
      POP 			function updateTokensPerEth(ui...
      POP 			function updateTokensPerEth(ui...
      PUSH [tag] 78			function updateTokensPerEth(ui...
      JUMP 			function updateTokensPerEth(ui...
    tag 77			function updateTokensPerEth(ui...
      JUMPDEST 			function updateTokensPerEth(ui...
      STOP 			function updateTokensPerEth(ui...
    tag 16			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      PUSH [tag] 79			function transfer(address _to,...
      JUMPI 			function transfer(address _to,...
      PUSH 0			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      REVERT 			function transfer(address _to,...
    tag 79			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH [tag] 80			function transfer(address _to,...
      PUSH 4			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
      AND 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH [tag] 81			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 80			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP3 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      MSTORE 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      RETURN 			function transfer(address _to,...
    tag 17			function getTokens() payable c...
      JUMPDEST 			function getTokens() payable c...
      PUSH [tag] 82			function getTokens() payable c...
      PUSH [tag] 28			function getTokens() payable c...
      JUMP 			function getTokens() payable c...
    tag 82			function getTokens() payable c...
      JUMPDEST 			function getTokens() payable c...
      STOP 			function getTokens() payable c...
    tag 18			uint256 public constant minCon...
      JUMPDEST 			uint256 public constant minCon...
      CALLVALUE 			uint256 public constant minCon...
      ISZERO 			uint256 public constant minCon...
      PUSH [tag] 83			uint256 public constant minCon...
      JUMPI 			uint256 public constant minCon...
      PUSH 0			uint256 public constant minCon...
      DUP1 			uint256 public constant minCon...
      REVERT 			uint256 public constant minCon...
    tag 83			uint256 public constant minCon...
      JUMPDEST 			uint256 public constant minCon...
      PUSH [tag] 84			uint256 public constant minCon...
      PUSH [tag] 85			uint256 public constant minCon...
      JUMP 			uint256 public constant minCon...
    tag 84			uint256 public constant minCon...
      JUMPDEST 			uint256 public constant minCon...
      PUSH 40			uint256 public constant minCon...
      MLOAD 			uint256 public constant minCon...
      DUP1 			uint256 public constant minCon...
      DUP3 			uint256 public constant minCon...
      DUP2 			uint256 public constant minCon...
      MSTORE 			uint256 public constant minCon...
      PUSH 20			uint256 public constant minCon...
      ADD 			uint256 public constant minCon...
      SWAP2 			uint256 public constant minCon...
      POP 			uint256 public constant minCon...
      POP 			uint256 public constant minCon...
      PUSH 40			uint256 public constant minCon...
      MLOAD 			uint256 public constant minCon...
      DUP1 			uint256 public constant minCon...
      SWAP2 			uint256 public constant minCon...
      SUB 			uint256 public constant minCon...
      SWAP1 			uint256 public constant minCon...
      RETURN 			uint256 public constant minCon...
    tag 19			bool public distributionFinish...
      JUMPDEST 			bool public distributionFinish...
      CALLVALUE 			bool public distributionFinish...
      ISZERO 			bool public distributionFinish...
      PUSH [tag] 86			bool public distributionFinish...
      JUMPI 			bool public distributionFinish...
      PUSH 0			bool public distributionFinish...
      DUP1 			bool public distributionFinish...
      REVERT 			bool public distributionFinish...
    tag 86			bool public distributionFinish...
      JUMPDEST 			bool public distributionFinish...
      PUSH [tag] 87			bool public distributionFinish...
      PUSH [tag] 88			bool public distributionFinish...
      JUMP 			bool public distributionFinish...
    tag 87			bool public distributionFinish...
      JUMPDEST 			bool public distributionFinish...
      PUSH 40			bool public distributionFinish...
      MLOAD 			bool public distributionFinish...
      DUP1 			bool public distributionFinish...
      DUP3 			bool public distributionFinish...
      ISZERO 			bool public distributionFinish...
      ISZERO 			bool public distributionFinish...
      ISZERO 			bool public distributionFinish...
      ISZERO 			bool public distributionFinish...
      DUP2 			bool public distributionFinish...
      MSTORE 			bool public distributionFinish...
      PUSH 20			bool public distributionFinish...
      ADD 			bool public distributionFinish...
      SWAP2 			bool public distributionFinish...
      POP 			bool public distributionFinish...
      POP 			bool public distributionFinish...
      PUSH 40			bool public distributionFinish...
      MLOAD 			bool public distributionFinish...
      DUP1 			bool public distributionFinish...
      SWAP2 			bool public distributionFinish...
      SUB 			bool public distributionFinish...
      SWAP1 			bool public distributionFinish...
      RETURN 			bool public distributionFinish...
    tag 20			function getTokenBalance(addre...
      JUMPDEST 			function getTokenBalance(addre...
      CALLVALUE 			function getTokenBalance(addre...
      ISZERO 			function getTokenBalance(addre...
      PUSH [tag] 89			function getTokenBalance(addre...
      JUMPI 			function getTokenBalance(addre...
      PUSH 0			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      REVERT 			function getTokenBalance(addre...
    tag 89			function getTokenBalance(addre...
      JUMPDEST 			function getTokenBalance(addre...
      PUSH [tag] 90			function getTokenBalance(addre...
      PUSH 4			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      CALLDATALOAD 			function getTokenBalance(addre...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function getTokenBalance(addre...
      AND 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      PUSH 20			function getTokenBalance(addre...
      ADD 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      SWAP2 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      CALLDATALOAD 			function getTokenBalance(addre...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function getTokenBalance(addre...
      AND 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      PUSH 20			function getTokenBalance(addre...
      ADD 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      SWAP2 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      PUSH [tag] 91			function getTokenBalance(addre...
      JUMP 			function getTokenBalance(addre...
    tag 90			function getTokenBalance(addre...
      JUMPDEST 			function getTokenBalance(addre...
      PUSH 40			function getTokenBalance(addre...
      MLOAD 			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      DUP3 			function getTokenBalance(addre...
      DUP2 			function getTokenBalance(addre...
      MSTORE 			function getTokenBalance(addre...
      PUSH 20			function getTokenBalance(addre...
      ADD 			function getTokenBalance(addre...
      SWAP2 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      PUSH 40			function getTokenBalance(addre...
      MLOAD 			function getTokenBalance(addre...
      DUP1 			function getTokenBalance(addre...
      SWAP2 			function getTokenBalance(addre...
      SUB 			function getTokenBalance(addre...
      SWAP1 			function getTokenBalance(addre...
      RETURN 			function getTokenBalance(addre...
    tag 21			uint256 public tokensPerEth = ...
      JUMPDEST 			uint256 public tokensPerEth = ...
      CALLVALUE 			uint256 public tokensPerEth = ...
      ISZERO 			uint256 public tokensPerEth = ...
      PUSH [tag] 92			uint256 public tokensPerEth = ...
      JUMPI 			uint256 public tokensPerEth = ...
      PUSH 0			uint256 public tokensPerEth = ...
      DUP1 			uint256 public tokensPerEth = ...
      REVERT 			uint256 public tokensPerEth = ...
    tag 92			uint256 public tokensPerEth = ...
      JUMPDEST 			uint256 public tokensPerEth = ...
      PUSH [tag] 93			uint256 public tokensPerEth = ...
      PUSH [tag] 94			uint256 public tokensPerEth = ...
      JUMP 			uint256 public tokensPerEth = ...
    tag 93			uint256 public tokensPerEth = ...
      JUMPDEST 			uint256 public tokensPerEth = ...
      PUSH 40			uint256 public tokensPerEth = ...
      MLOAD 			uint256 public tokensPerEth = ...
      DUP1 			uint256 public tokensPerEth = ...
      DUP3 			uint256 public tokensPerEth = ...
      DUP2 			uint256 public tokensPerEth = ...
      MSTORE 			uint256 public tokensPerEth = ...
      PUSH 20			uint256 public tokensPerEth = ...
      ADD 			uint256 public tokensPerEth = ...
      SWAP2 			uint256 public tokensPerEth = ...
      POP 			uint256 public tokensPerEth = ...
      POP 			uint256 public tokensPerEth = ...
      PUSH 40			uint256 public tokensPerEth = ...
      MLOAD 			uint256 public tokensPerEth = ...
      DUP1 			uint256 public tokensPerEth = ...
      SWAP2 			uint256 public tokensPerEth = ...
      SUB 			uint256 public tokensPerEth = ...
      SWAP1 			uint256 public tokensPerEth = ...
      RETURN 			uint256 public tokensPerEth = ...
    tag 22			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      CALLVALUE 			function allowance(address _ow...
      ISZERO 			function allowance(address _ow...
      PUSH [tag] 95			function allowance(address _ow...
      JUMPI 			function allowance(address _ow...
      PUSH 0			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      REVERT 			function allowance(address _ow...
    tag 95			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH [tag] 96			function allowance(address _ow...
      PUSH 4			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH [tag] 97			function allowance(address _ow...
      JUMP 			function allowance(address _ow...
    tag 96			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP3 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      MSTORE 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      RETURN 			function allowance(address _ow...
    tag 23			uint256 public totalDistribute...
      JUMPDEST 			uint256 public totalDistribute...
      CALLVALUE 			uint256 public totalDistribute...
      ISZERO 			uint256 public totalDistribute...
      PUSH [tag] 98			uint256 public totalDistribute...
      JUMPI 			uint256 public totalDistribute...
      PUSH 0			uint256 public totalDistribute...
      DUP1 			uint256 public totalDistribute...
      REVERT 			uint256 public totalDistribute...
    tag 98			uint256 public totalDistribute...
      JUMPDEST 			uint256 public totalDistribute...
      PUSH [tag] 99			uint256 public totalDistribute...
      PUSH [tag] 100			uint256 public totalDistribute...
      JUMP 			uint256 public totalDistribute...
    tag 99			uint256 public totalDistribute...
      JUMPDEST 			uint256 public totalDistribute...
      PUSH 40			uint256 public totalDistribute...
      MLOAD 			uint256 public totalDistribute...
      DUP1 			uint256 public totalDistribute...
      DUP3 			uint256 public totalDistribute...
      DUP2 			uint256 public totalDistribute...
      MSTORE 			uint256 public totalDistribute...
      PUSH 20			uint256 public totalDistribute...
      ADD 			uint256 public totalDistribute...
      SWAP2 			uint256 public totalDistribute...
      POP 			uint256 public totalDistribute...
      POP 			uint256 public totalDistribute...
      PUSH 40			uint256 public totalDistribute...
      MLOAD 			uint256 public totalDistribute...
      DUP1 			uint256 public totalDistribute...
      SWAP2 			uint256 public totalDistribute...
      SUB 			uint256 public totalDistribute...
      SWAP1 			uint256 public totalDistribute...
      RETURN 			uint256 public totalDistribute...
    tag 24			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      CALLVALUE 			function transferOwnership(add...
      ISZERO 			function transferOwnership(add...
      PUSH [tag] 101			function transferOwnership(add...
      JUMPI 			function transferOwnership(add...
      PUSH 0			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      REVERT 			function transferOwnership(add...
    tag 101			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH [tag] 102			function transferOwnership(add...
      PUSH 4			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATALOAD 			function transferOwnership(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferOwnership(add...
      AND 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      PUSH 20			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      SWAP2 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      PUSH [tag] 103			function transferOwnership(add...
      JUMP 			function transferOwnership(add...
    tag 102			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      STOP 			function transferOwnership(add...
    tag 28			function getTokens() payable c...
      JUMPDEST 			function getTokens() payable c...
      PUSH 0			uint256 tokens
      DUP1 			address investor
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      SWAP1 			distributionFinished
      SLOAD 			distributionFinished
      SWAP1 			distributionFinished
      PUSH 100			distributionFinished
      EXP 			distributionFinished
      SWAP1 			distributionFinished
      DIV 			distributionFinished
      PUSH FF			distributionFinished
      AND 			distributionFinished
      ISZERO 			!distributionFinished
      ISZERO 			require(!distributionFinished)
      ISZERO 			require(!distributionFinished)
      PUSH [tag] 105			require(!distributionFinished)
      JUMPI 			require(!distributionFinished)
      PUSH 0			require(!distributionFinished)
      DUP1 			require(!distributionFinished)
      REVERT 			require(!distributionFinished)
    tag 105			require(!distributionFinished)
      JUMPDEST 			require(!distributionFinished)
      PUSH 0			0
      SWAP2 			uint256 tokens = 0
      POP 			uint256 tokens = 0
      PUSH 38D7EA4C68000			1 ether / 1000
      CALLVALUE 			msg.value
      LT 			msg.value >= minContribution
      ISZERO 			msg.value >= minContribution
      ISZERO 			require( msg.value >= minContr...
      ISZERO 			require( msg.value >= minContr...
      PUSH [tag] 107			require( msg.value >= minContr...
      JUMPI 			require( msg.value >= minContr...
      PUSH 0			require( msg.value >= minContr...
      DUP1 			require( msg.value >= minContr...
      REVERT 			require( msg.value >= minContr...
    tag 107			require( msg.value >= minContr...
      JUMPDEST 			require( msg.value >= minContr...
      PUSH 0			0
      CALLVALUE 			msg.value
      GT 			msg.value > 0
      ISZERO 			require( msg.value > 0 )
      ISZERO 			require( msg.value > 0 )
      PUSH [tag] 108			require( msg.value > 0 )
      JUMPI 			require( msg.value > 0 )
      PUSH 0			require( msg.value > 0 )
      DUP1 			require( msg.value > 0 )
      REVERT 			require( msg.value > 0 )
    tag 108			require( msg.value > 0 )
      JUMPDEST 			require( msg.value > 0 )
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 109			tokensPerEth.mul(msg.value)
      CALLVALUE 			msg.value
      PUSH 6			tokensPerEth
      SLOAD 			tokensPerEth
      PUSH [tag] 110			tokensPerEth.mul
      SWAP1 			tokensPerEth.mul
      SWAP2 			tokensPerEth.mul(msg.value)
      SWAP1 			tokensPerEth.mul(msg.value)
      PUSH FFFFFFFF			tokensPerEth.mul(msg.value)
      AND 			tokensPerEth.mul(msg.value)
      JUMP [in]			tokensPerEth.mul(msg.value)
    tag 109			tokensPerEth.mul(msg.value)
      JUMPDEST 			tokensPerEth.mul(msg.value)
      DUP2 			tokensPerEth.mul(msg.value) / ...
      ISZERO 			tokensPerEth.mul(msg.value) / ...
      ISZERO 			tokensPerEth.mul(msg.value) / ...
      PUSH [tag] 111			tokensPerEth.mul(msg.value) / ...
      JUMPI 			tokensPerEth.mul(msg.value) / ...
      INVALID 			tokensPerEth.mul(msg.value) / ...
    tag 111			tokensPerEth.mul(msg.value) / ...
      JUMPDEST 			tokensPerEth.mul(msg.value) / ...
      DIV 			tokensPerEth.mul(msg.value) / ...
      SWAP2 			tokens = tokensPerEth.mul(msg....
      POP 			tokens = tokensPerEth.mul(msg....
      CALLER 			msg.sender
      SWAP1 			address investor = msg.sender
      POP 			address investor = msg.sender
      PUSH 0			0
      DUP3 			tokens
      GT 			tokens > 0
      ISZERO 			if (tokens > 0) {\n           ...
      PUSH [tag] 112			if (tokens > 0) {\n           ...
      JUMPI 			if (tokens > 0) {\n           ...
      PUSH [tag] 113			distr(investor, tokens)
      DUP2 			investor
      DUP4 			tokens
      PUSH [tag] 114			distr
      JUMP [in]			distr(investor, tokens)
    tag 113			distr(investor, tokens)
      JUMPDEST 			distr(investor, tokens)
      POP 			distr(investor, tokens)
    tag 112			if (tokens > 0) {\n           ...
      JUMPDEST 			if (tokens > 0) {\n           ...
      PUSH 4			totalSupply
      SLOAD 			totalSupply
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      LT 			totalDistributed >= totalSuppl...
      ISZERO 			totalDistributed >= totalSuppl...
      ISZERO 			if (totalDistributed >= totalS...
      PUSH [tag] 115			if (totalDistributed >= totalS...
      JUMPI 			if (totalDistributed >= totalS...
      PUSH 1			true
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      PUSH 100			distributionFinished = true
      EXP 			distributionFinished = true
      DUP2 			distributionFinished = true
      SLOAD 			distributionFinished = true
      DUP2 			distributionFinished = true
      PUSH FF			distributionFinished = true
      MUL 			distributionFinished = true
      NOT 			distributionFinished = true
      AND 			distributionFinished = true
      SWAP1 			distributionFinished = true
      DUP4 			distributionFinished = true
      ISZERO 			distributionFinished = true
      ISZERO 			distributionFinished = true
      MUL 			distributionFinished = true
      OR 			distributionFinished = true
      SWAP1 			distributionFinished = true
      SSTORE 			distributionFinished = true
      POP 			distributionFinished = true
    tag 115			if (totalDistributed >= totalS...
      JUMPDEST 			if (totalDistributed >= totalS...
      POP 			function getTokens() payable c...
      POP 			function getTokens() payable c...
      JUMP [out]			function getTokens() payable c...
    tag 31			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 11			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 43727970746F4469616D6F6E64436F696E000000000000000000000000000000			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      POP 			string public constant name = ...
      DUP2 			string public constant name = ...
      JUMP [out]			string public constant name = ...
    tag 38			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 0			bool success
      DUP1 			0
      DUP3 			_value
      EQ 			_value != 0
      ISZERO 			_value != 0
      DUP1 			_value != 0 && allowed[msg.sen...
      ISZERO 			_value != 0 && allowed[msg.sen...
      PUSH [tag] 117			_value != 0 && allowed[msg.sen...
      JUMPI 			_value != 0 && allowed[msg.sen...
      POP 			_value != 0 && allowed[msg.sen...
      PUSH 0			0
      PUSH 3			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      EQ 			allowed[msg.sender][_spender] ...
      ISZERO 			allowed[msg.sender][_spender] ...
    tag 117			_value != 0 && allowed[msg.sen...
      JUMPDEST 			_value != 0 && allowed[msg.sen...
      ISZERO 			if (_value != 0 && allowed[msg...
      PUSH [tag] 118			if (_value != 0 && allowed[msg...
      JUMPI 			if (_value != 0 && allowed[msg...
      PUSH 0			false
      SWAP1 			return false
      POP 			return false
      PUSH [tag] 116			return false
      JUMP 			return false
    tag 118			if (_value != 0 && allowed[msg...
      JUMPDEST 			if (_value != 0 && allowed[msg...
      DUP2 			_value
      PUSH 3			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      DUP5 			_value
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
    tag 116			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 41			uint256 public totalSupply = 7...
      JUMPDEST 			uint256 public totalSupply = 7...
      PUSH 4			uint256 public totalSupply = 7...
      SLOAD 			uint256 public totalSupply = 7...
      DUP2 			uint256 public totalSupply = 7...
      JUMP [out]			uint256 public totalSupply = 7...
    tag 44			function withdrawAltcoinTokens...
      JUMPDEST 			function withdrawAltcoinTokens...
      PUSH 0			bool
      DUP1 			AltcoinToken token
      PUSH 0			uint256 amount
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 120			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 120			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      DUP4 			_tokenContract
      SWAP2 			AltcoinToken token = AltcoinTo...
      POP 			AltcoinToken token = AltcoinTo...
      DUP2 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.balanceOf
      AND 			token.balanceOf
      PUSH 70A08231			token.balanceOf
      ADDRESS 			this
      PUSH 40			token.balanceOf(address(this))
      MLOAD 			token.balanceOf(address(this))
      DUP3 			token.balanceOf(address(this))
      PUSH FFFFFFFF			token.balanceOf(address(this))
      AND 			token.balanceOf(address(this))
      PUSH 100000000000000000000000000000000000000000000000000000000			token.balanceOf(address(this))
      MUL 			token.balanceOf(address(this))
      DUP2 			token.balanceOf(address(this))
      MSTORE 			token.balanceOf(address(this))
      PUSH 4			token.balanceOf(address(this))
      ADD 			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      DUP3 			token.balanceOf(address(this))
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.balanceOf(address(this))
      AND 			token.balanceOf(address(this))
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.balanceOf(address(this))
      AND 			token.balanceOf(address(this))
      DUP2 			token.balanceOf(address(this))
      MSTORE 			token.balanceOf(address(this))
      PUSH 20			token.balanceOf(address(this))
      ADD 			token.balanceOf(address(this))
      SWAP2 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      PUSH 20			token.balanceOf(address(this))
      PUSH 40			token.balanceOf(address(this))
      MLOAD 			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      DUP4 			token.balanceOf(address(this))
      SUB 			token.balanceOf(address(this))
      DUP2 			token.balanceOf(address(this))
      PUSH 0			token.balanceOf(address(this))
      DUP8 			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      EXTCODESIZE 			token.balanceOf(address(this))
      ISZERO 			token.balanceOf(address(this))
      ISZERO 			token.balanceOf(address(this))
      PUSH [tag] 122			token.balanceOf(address(this))
      JUMPI 			token.balanceOf(address(this))
      PUSH 0			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      REVERT 			token.balanceOf(address(this))
    tag 122			token.balanceOf(address(this))
      JUMPDEST 			token.balanceOf(address(this))
      GAS 			token.balanceOf(address(this))
      CALL 			token.balanceOf(address(this))
      ISZERO 			token.balanceOf(address(this))
      ISZERO 			token.balanceOf(address(this))
      PUSH [tag] 123			token.balanceOf(address(this))
      JUMPI 			token.balanceOf(address(this))
      PUSH 0			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      REVERT 			token.balanceOf(address(this))
    tag 123			token.balanceOf(address(this))
      JUMPDEST 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      PUSH 40			token.balanceOf(address(this))
      MLOAD 			token.balanceOf(address(this))
      DUP1 			token.balanceOf(address(this))
      MLOAD 			token.balanceOf(address(this))
      SWAP1 			token.balanceOf(address(this))
      POP 			token.balanceOf(address(this))
      SWAP1 			uint256 amount = token.balance...
      POP 			uint256 amount = token.balance...
      DUP2 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.transfer
      AND 			token.transfer
      PUSH A9059CBB			token.transfer
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      DUP4 			amount
      PUSH 40			token.transfer(owner, amount)
      MLOAD 			token.transfer(owner, amount)
      DUP4 			token.transfer(owner, amount)
      PUSH FFFFFFFF			token.transfer(owner, amount)
      AND 			token.transfer(owner, amount)
      PUSH 100000000000000000000000000000000000000000000000000000000			token.transfer(owner, amount)
      MUL 			token.transfer(owner, amount)
      DUP2 			token.transfer(owner, amount)
      MSTORE 			token.transfer(owner, amount)
      PUSH 4			token.transfer(owner, amount)
      ADD 			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      DUP4 			token.transfer(owner, amount)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.transfer(owner, amount)
      AND 			token.transfer(owner, amount)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.transfer(owner, amount)
      AND 			token.transfer(owner, amount)
      DUP2 			token.transfer(owner, amount)
      MSTORE 			token.transfer(owner, amount)
      PUSH 20			token.transfer(owner, amount)
      ADD 			token.transfer(owner, amount)
      DUP3 			token.transfer(owner, amount)
      DUP2 			token.transfer(owner, amount)
      MSTORE 			token.transfer(owner, amount)
      PUSH 20			token.transfer(owner, amount)
      ADD 			token.transfer(owner, amount)
      SWAP3 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      PUSH 20			token.transfer(owner, amount)
      PUSH 40			token.transfer(owner, amount)
      MLOAD 			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      DUP4 			token.transfer(owner, amount)
      SUB 			token.transfer(owner, amount)
      DUP2 			token.transfer(owner, amount)
      PUSH 0			token.transfer(owner, amount)
      DUP8 			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      EXTCODESIZE 			token.transfer(owner, amount)
      ISZERO 			token.transfer(owner, amount)
      ISZERO 			token.transfer(owner, amount)
      PUSH [tag] 124			token.transfer(owner, amount)
      JUMPI 			token.transfer(owner, amount)
      PUSH 0			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      REVERT 			token.transfer(owner, amount)
    tag 124			token.transfer(owner, amount)
      JUMPDEST 			token.transfer(owner, amount)
      GAS 			token.transfer(owner, amount)
      CALL 			token.transfer(owner, amount)
      ISZERO 			token.transfer(owner, amount)
      ISZERO 			token.transfer(owner, amount)
      PUSH [tag] 125			token.transfer(owner, amount)
      JUMPI 			token.transfer(owner, amount)
      PUSH 0			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      REVERT 			token.transfer(owner, amount)
    tag 125			token.transfer(owner, amount)
      JUMPDEST 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      PUSH 40			token.transfer(owner, amount)
      MLOAD 			token.transfer(owner, amount)
      DUP1 			token.transfer(owner, amount)
      MLOAD 			token.transfer(owner, amount)
      SWAP1 			token.transfer(owner, amount)
      POP 			token.transfer(owner, amount)
      SWAP3 			return token.transfer(owner, a...
      POP 			return token.transfer(owner, a...
      POP 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      SWAP2 			function withdrawAltcoinTokens...
      SWAP1 			function withdrawAltcoinTokens...
      POP 			function withdrawAltcoinTokens...
      JUMP [out]			function withdrawAltcoinTokens...
    tag 47			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool success
      PUSH 60			3 * 32
      PUSH 4			4
      DUP2 			size
      ADD 			size + 4
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      SWAP1 			msg.data.length
      POP 			msg.data.length
      LT 			msg.data.length >= size + 4
      ISZERO 			msg.data.length >= size + 4
      ISZERO 			assert(msg.data.length >= size...
      ISZERO 			assert(msg.data.length >= size...
      PUSH [tag] 127			assert(msg.data.length >= size...
      JUMPI 			assert(msg.data.length >= size...
      INVALID 			assert(msg.data.length >= size...
    tag 127			assert(msg.data.length >= size...
      JUMPDEST 			assert(msg.data.length >= size...
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP5 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 129			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 129			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 2			balances
      PUSH 0			balances[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      DUP4 			_amount
      GT 			_amount <= balances[_from]
      ISZERO 			_amount <= balances[_from]
      ISZERO 			require(_amount <= balances[_f...
      ISZERO 			require(_amount <= balances[_f...
      PUSH [tag] 130			require(_amount <= balances[_f...
      JUMPI 			require(_amount <= balances[_f...
      PUSH 0			require(_amount <= balances[_f...
      DUP1 			require(_amount <= balances[_f...
      REVERT 			require(_amount <= balances[_f...
    tag 130			require(_amount <= balances[_f...
      JUMPDEST 			require(_amount <= balances[_f...
      PUSH 3			allowed
      PUSH 0			allowed[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      DUP4 			_amount
      GT 			_amount <= allowed[_from][msg....
      ISZERO 			_amount <= allowed[_from][msg....
      ISZERO 			require(_amount <= allowed[_fr...
      ISZERO 			require(_amount <= allowed[_fr...
      PUSH [tag] 131			require(_amount <= allowed[_fr...
      JUMPI 			require(_amount <= allowed[_fr...
      PUSH 0			require(_amount <= allowed[_fr...
      DUP1 			require(_amount <= allowed[_fr...
      REVERT 			require(_amount <= allowed[_fr...
    tag 131			require(_amount <= allowed[_fr...
      JUMPDEST 			require(_amount <= allowed[_fr...
      PUSH [tag] 132			balances[_from].sub(_amount)
      DUP4 			_amount
      PUSH 2			balances
      PUSH 0			balances[_from]
      DUP9 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      PUSH [tag] 133			balances[_from].sub
      SWAP1 			balances[_from].sub
      SWAP2 			balances[_from].sub(_amount)
      SWAP1 			balances[_from].sub(_amount)
      PUSH FFFFFFFF			balances[_from].sub(_amount)
      AND 			balances[_from].sub(_amount)
      JUMP [in]			balances[_from].sub(_amount)
    tag 132			balances[_from].sub(_amount)
      JUMPDEST 			balances[_from].sub(_amount)
      PUSH 2			balances
      PUSH 0			balances[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      DUP2 			balances[_from] = balances[_fr...
      SWAP1 			balances[_from] = balances[_fr...
      SSTORE 			balances[_from] = balances[_fr...
      POP 			balances[_from] = balances[_fr...
      PUSH [tag] 134			allowed[_from][msg.sender].sub...
      DUP4 			_amount
      PUSH 3			allowed
      PUSH 0			allowed[_from]
      DUP9 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      PUSH [tag] 133			allowed[_from][msg.sender].sub
      SWAP1 			allowed[_from][msg.sender].sub
      SWAP2 			allowed[_from][msg.sender].sub...
      SWAP1 			allowed[_from][msg.sender].sub...
      PUSH FFFFFFFF			allowed[_from][msg.sender].sub...
      AND 			allowed[_from][msg.sender].sub...
      JUMP [in]			allowed[_from][msg.sender].sub...
    tag 134			allowed[_from][msg.sender].sub...
      JUMPDEST 			allowed[_from][msg.sender].sub...
      PUSH 3			allowed
      PUSH 0			allowed[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender] = a...
      SWAP1 			allowed[_from][msg.sender] = a...
      SSTORE 			allowed[_from][msg.sender] = a...
      POP 			allowed[_from][msg.sender] = a...
      PUSH [tag] 135			balances[_to].add(_amount)
      DUP4 			_amount
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP8 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 136			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_amount)
      SWAP1 			balances[_to].add(_amount)
      PUSH FFFFFFFF			balances[_to].add(_amount)
      AND 			balances[_to].add(_amount)
      JUMP [in]			balances[_to].add(_amount)
    tag 135			balances[_to].add(_amount)
      JUMPDEST 			balances[_to].add(_amount)
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _amount)
      AND 			Transfer(_from, _to, _amount)
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _amount)
      AND 			Transfer(_from, _to, _amount)
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _amount)
      DUP6 			_amount
      PUSH 40			Transfer(_from, _to, _amount)
      MLOAD 			Transfer(_from, _to, _amount)
      DUP1 			Transfer(_from, _to, _amount)
      DUP3 			Transfer(_from, _to, _amount)
      DUP2 			Transfer(_from, _to, _amount)
      MSTORE 			Transfer(_from, _to, _amount)
      PUSH 20			Transfer(_from, _to, _amount)
      ADD 			Transfer(_from, _to, _amount)
      SWAP2 			Transfer(_from, _to, _amount)
      POP 			Transfer(_from, _to, _amount)
      POP 			Transfer(_from, _to, _amount)
      PUSH 40			Transfer(_from, _to, _amount)
      MLOAD 			Transfer(_from, _to, _amount)
      DUP1 			Transfer(_from, _to, _amount)
      SWAP2 			Transfer(_from, _to, _amount)
      SUB 			Transfer(_from, _to, _amount)
      SWAP1 			Transfer(_from, _to, _amount)
      LOG3 			Transfer(_from, _to, _amount)
      PUSH 1			true
      SWAP2 			return true
      POP 			return true
      POP 			function transferFrom(address ...
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 50			uint public constant decimals ...
      JUMPDEST 			uint public constant decimals ...
      PUSH 12			18
      DUP2 			uint public constant decimals ...
      JUMP [out]			uint public constant decimals ...
    tag 53			function withdraw() onlyOwner ...
      JUMPDEST 			function withdraw() onlyOwner ...
      PUSH 0			address myAddress
      DUP1 			uint256 etherBalance
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 138			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 138			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      ADDRESS 			this
      SWAP2 			address myAddress = this
      POP 			address myAddress = this
      DUP2 			myAddress
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			myAddress.balance
      AND 			myAddress.balance
      BALANCE 			myAddress.balance
      SWAP1 			uint256 etherBalance = myAddre...
      POP 			uint256 etherBalance = myAddre...
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner.transfer
      AND 			owner.transfer
      PUSH 8FC			owner.transfer(etherBalance)
      DUP3 			etherBalance
      SWAP1 			owner.transfer(etherBalance)
      DUP2 			owner.transfer(etherBalance)
      ISZERO 			owner.transfer(etherBalance)
      MUL 			owner.transfer(etherBalance)
      SWAP1 			owner.transfer(etherBalance)
      PUSH 40			owner.transfer(etherBalance)
      MLOAD 			owner.transfer(etherBalance)
      PUSH 0			owner.transfer(etherBalance)
      PUSH 40			owner.transfer(etherBalance)
      MLOAD 			owner.transfer(etherBalance)
      DUP1 			owner.transfer(etherBalance)
      DUP4 			owner.transfer(etherBalance)
      SUB 			owner.transfer(etherBalance)
      DUP2 			owner.transfer(etherBalance)
      DUP6 			owner.transfer(etherBalance)
      DUP9 			owner.transfer(etherBalance)
      DUP9 			owner.transfer(etherBalance)
      CALL 			owner.transfer(etherBalance)
      SWAP4 			owner.transfer(etherBalance)
      POP 			owner.transfer(etherBalance)
      POP 			owner.transfer(etherBalance)
      POP 			owner.transfer(etherBalance)
      POP 			owner.transfer(etherBalance)
      ISZERO 			owner.transfer(etherBalance)
      ISZERO 			owner.transfer(etherBalance)
      PUSH [tag] 140			owner.transfer(etherBalance)
      JUMPI 			owner.transfer(etherBalance)
      PUSH 0			owner.transfer(etherBalance)
      DUP1 			owner.transfer(etherBalance)
      REVERT 			owner.transfer(etherBalance)
    tag 140			owner.transfer(etherBalance)
      JUMPDEST 			owner.transfer(etherBalance)
      POP 			function withdraw() onlyOwner ...
      POP 			function withdraw() onlyOwner ...
      JUMP [out]			function withdraw() onlyOwner ...
    tag 56			function burn(uint256 _value) ...
      JUMPDEST 			function burn(uint256 _value) ...
      PUSH 0			address burner
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 142			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 142			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 2			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP3 			_value
      GT 			_value <= balances[msg.sender]
      ISZERO 			_value <= balances[msg.sender]
      ISZERO 			require(_value <= balances[msg...
      ISZERO 			require(_value <= balances[msg...
      PUSH [tag] 144			require(_value <= balances[msg...
      JUMPI 			require(_value <= balances[msg...
      PUSH 0			require(_value <= balances[msg...
      DUP1 			require(_value <= balances[msg...
      REVERT 			require(_value <= balances[msg...
    tag 144			require(_value <= balances[msg...
      JUMPDEST 			require(_value <= balances[msg...
      CALLER 			msg.sender
      SWAP1 			address burner = msg.sender
      POP 			address burner = msg.sender
      PUSH [tag] 145			balances[burner].sub(_value)
      DUP3 			_value
      PUSH 2			balances
      PUSH 0			balances[burner]
      DUP5 			burner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[burner]
      AND 			balances[burner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[burner]
      AND 			balances[burner]
      DUP2 			balances[burner]
      MSTORE 			balances[burner]
      PUSH 20			balances[burner]
      ADD 			balances[burner]
      SWAP1 			balances[burner]
      DUP2 			balances[burner]
      MSTORE 			balances[burner]
      PUSH 20			balances[burner]
      ADD 			balances[burner]
      PUSH 0			balances[burner]
      KECCAK256 			balances[burner]
      SLOAD 			balances[burner]
      PUSH [tag] 133			balances[burner].sub
      SWAP1 			balances[burner].sub
      SWAP2 			balances[burner].sub(_value)
      SWAP1 			balances[burner].sub(_value)
      PUSH FFFFFFFF			balances[burner].sub(_value)
      AND 			balances[burner].sub(_value)
      JUMP [in]			balances[burner].sub(_value)
    tag 145			balances[burner].sub(_value)
      JUMPDEST 			balances[burner].sub(_value)
      PUSH 2			balances
      PUSH 0			balances[burner]
      DUP4 			burner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[burner]
      AND 			balances[burner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[burner]
      AND 			balances[burner]
      DUP2 			balances[burner]
      MSTORE 			balances[burner]
      PUSH 20			balances[burner]
      ADD 			balances[burner]
      SWAP1 			balances[burner]
      DUP2 			balances[burner]
      MSTORE 			balances[burner]
      PUSH 20			balances[burner]
      ADD 			balances[burner]
      PUSH 0			balances[burner]
      KECCAK256 			balances[burner]
      DUP2 			balances[burner] = balances[bu...
      SWAP1 			balances[burner] = balances[bu...
      SSTORE 			balances[burner] = balances[bu...
      POP 			balances[burner] = balances[bu...
      PUSH [tag] 146			totalSupply.sub(_value)
      DUP3 			_value
      PUSH 4			totalSupply
      SLOAD 			totalSupply
      PUSH [tag] 133			totalSupply.sub
      SWAP1 			totalSupply.sub
      SWAP2 			totalSupply.sub(_value)
      SWAP1 			totalSupply.sub(_value)
      PUSH FFFFFFFF			totalSupply.sub(_value)
      AND 			totalSupply.sub(_value)
      JUMP [in]			totalSupply.sub(_value)
    tag 146			totalSupply.sub(_value)
      JUMPDEST 			totalSupply.sub(_value)
      PUSH 4			totalSupply
      DUP2 			totalSupply = totalSupply.sub(...
      SWAP1 			totalSupply = totalSupply.sub(...
      SSTORE 			totalSupply = totalSupply.sub(...
      POP 			totalSupply = totalSupply.sub(...
      PUSH [tag] 147			totalDistributed.sub(_value)
      DUP3 			_value
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      PUSH [tag] 133			totalDistributed.sub
      SWAP1 			totalDistributed.sub
      SWAP2 			totalDistributed.sub(_value)
      SWAP1 			totalDistributed.sub(_value)
      PUSH FFFFFFFF			totalDistributed.sub(_value)
      AND 			totalDistributed.sub(_value)
      JUMP [in]			totalDistributed.sub(_value)
    tag 147			totalDistributed.sub(_value)
      JUMPDEST 			totalDistributed.sub(_value)
      PUSH 5			totalDistributed
      DUP2 			totalDistributed = totalDistri...
      SWAP1 			totalDistributed = totalDistri...
      SSTORE 			totalDistributed = totalDistri...
      POP 			totalDistributed = totalDistri...
      DUP1 			burner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Burn(burner, _value)
      AND 			Burn(burner, _value)
      PUSH CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5			Burn(burner, _value)
      DUP4 			_value
      PUSH 40			Burn(burner, _value)
      MLOAD 			Burn(burner, _value)
      DUP1 			Burn(burner, _value)
      DUP3 			Burn(burner, _value)
      DUP2 			Burn(burner, _value)
      MSTORE 			Burn(burner, _value)
      PUSH 20			Burn(burner, _value)
      ADD 			Burn(burner, _value)
      SWAP2 			Burn(burner, _value)
      POP 			Burn(burner, _value)
      POP 			Burn(burner, _value)
      PUSH 40			Burn(burner, _value)
      MLOAD 			Burn(burner, _value)
      DUP1 			Burn(burner, _value)
      SWAP2 			Burn(burner, _value)
      SUB 			Burn(burner, _value)
      SWAP1 			Burn(burner, _value)
      LOG2 			Burn(burner, _value)
      POP 			function burn(uint256 _value) ...
      POP 			function burn(uint256 _value) ...
      JUMP [out]			function burn(uint256 _value) ...
    tag 59			function adminClaimAirdrop(add...
      JUMPDEST 			function adminClaimAirdrop(add...
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 149			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 149			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH [tag] 151			doAirdrop(_participant, _amoun...
      DUP3 			_participant
      DUP3 			_amount
      PUSH [tag] 152			doAirdrop
      JUMP [in]			doAirdrop(_participant, _amoun...
    tag 151			doAirdrop(_participant, _amoun...
      JUMPDEST 			doAirdrop(_participant, _amoun...
      POP 			function adminClaimAirdrop(add...
      POP 			function adminClaimAirdrop(add...
      JUMP [out]			function adminClaimAirdrop(add...
    tag 62			function adminClaimAirdropMult...
      JUMPDEST 			function adminClaimAirdropMult...
      PUSH 0			uint i
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 154			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 154			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 156			for (uint i = 0; i < _addresse...
      JUMPDEST 			for (uint i = 0; i < _addresse...
      DUP3 			_addresses
      MLOAD 			_addresses.length
      DUP2 			i
      LT 			i < _addresses.length
      ISZERO 			for (uint i = 0; i < _addresse...
      PUSH [tag] 157			for (uint i = 0; i < _addresse...
      JUMPI 			for (uint i = 0; i < _addresse...
      PUSH [tag] 159			doAirdrop(_addresses[i], _amou...
      DUP4 			_addresses
      DUP3 			i
      DUP2 			_addresses[i]
      MLOAD 			_addresses[i]
      DUP2 			_addresses[i]
      LT 			_addresses[i]
      ISZERO 			_addresses[i]
      ISZERO 			_addresses[i]
      PUSH [tag] 160			_addresses[i]
      JUMPI 			_addresses[i]
      INVALID 			_addresses[i]
    tag 160			_addresses[i]
      JUMPDEST 			_addresses[i]
      SWAP1 			_addresses[i]
      PUSH 20			_addresses[i]
      ADD 			_addresses[i]
      SWAP1 			_addresses[i]
      PUSH 20			_addresses[i]
      MUL 			_addresses[i]
      ADD 			_addresses[i]
      MLOAD 			_addresses[i]
      DUP4 			_amount
      PUSH [tag] 152			doAirdrop
      JUMP [in]			doAirdrop(_addresses[i], _amou...
    tag 159			doAirdrop(_addresses[i], _amou...
      JUMPDEST 			doAirdrop(_addresses[i], _amou...
      DUP1 			i++
      DUP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      POP 			i++
      POP 			i++
      PUSH [tag] 156			for (uint i = 0; i < _addresse...
      JUMP 			for (uint i = 0; i < _addresse...
    tag 157			for (uint i = 0; i < _addresse...
      JUMPDEST 			for (uint i = 0; i < _addresse...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      POP 			function adminClaimAirdropMult...
      JUMP [out]			function adminClaimAirdropMult...
    tag 65			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 0			uint256
      PUSH 2			balances
      PUSH 0			balances[_owner]
      DUP4 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      PUSH 0			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			return balances[_owner]
      POP 			return balances[_owner]
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      JUMP [out]			function balanceOf(address _ow...
    tag 68			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 3			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 4344430000000000000000000000000000000000000000000000000000000000			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      JUMP [out]			string public constant symbol ...
    tag 75			function finishDistribution() ...
      JUMPDEST 			function finishDistribution() ...
      PUSH 0			bool
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 163			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 163			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      SWAP1 			distributionFinished
      SLOAD 			distributionFinished
      SWAP1 			distributionFinished
      PUSH 100			distributionFinished
      EXP 			distributionFinished
      SWAP1 			distributionFinished
      DIV 			distributionFinished
      PUSH FF			distributionFinished
      AND 			distributionFinished
      ISZERO 			!distributionFinished
      ISZERO 			require(!distributionFinished)
      ISZERO 			require(!distributionFinished)
      PUSH [tag] 165			require(!distributionFinished)
      JUMPI 			require(!distributionFinished)
      PUSH 0			require(!distributionFinished)
      DUP1 			require(!distributionFinished)
      REVERT 			require(!distributionFinished)
    tag 165			require(!distributionFinished)
      JUMPDEST 			require(!distributionFinished)
      PUSH 1			true
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      PUSH 100			distributionFinished = true
      EXP 			distributionFinished = true
      DUP2 			distributionFinished = true
      SLOAD 			distributionFinished = true
      DUP2 			distributionFinished = true
      PUSH FF			distributionFinished = true
      MUL 			distributionFinished = true
      NOT 			distributionFinished = true
      AND 			distributionFinished = true
      SWAP1 			distributionFinished = true
      DUP4 			distributionFinished = true
      ISZERO 			distributionFinished = true
      ISZERO 			distributionFinished = true
      MUL 			distributionFinished = true
      OR 			distributionFinished = true
      SWAP1 			distributionFinished = true
      SSTORE 			distributionFinished = true
      POP 			distributionFinished = true
      PUSH 7F95D919E78BDEBE8A285E6E33357C2FCB65CCF66E72D7573F9F8F6CAAD0C4CC			DistrFinished()
      PUSH 40			DistrFinished()
      MLOAD 			DistrFinished()
      PUSH 40			DistrFinished()
      MLOAD 			DistrFinished()
      DUP1 			DistrFinished()
      SWAP2 			DistrFinished()
      SUB 			DistrFinished()
      SWAP1 			DistrFinished()
      LOG1 			DistrFinished()
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP1 			function finishDistribution() ...
      JUMP [out]			function finishDistribution() ...
    tag 78			function updateTokensPerEth(ui...
      JUMPDEST 			function updateTokensPerEth(ui...
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 168			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 168			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      DUP1 			_tokensPerEth
      PUSH 6			tokensPerEth
      DUP2 			tokensPerEth = _tokensPerEth
      SWAP1 			tokensPerEth = _tokensPerEth
      SSTORE 			tokensPerEth = _tokensPerEth
      POP 			tokensPerEth = _tokensPerEth
      PUSH F7729FA834BBEF70B6D3257C2317A562AA88B56C81B544814F93DC5963A2C003			TokensPerEthUpdated(_tokensPer...
      DUP2 			_tokensPerEth
      PUSH 40			TokensPerEthUpdated(_tokensPer...
      MLOAD 			TokensPerEthUpdated(_tokensPer...
      DUP1 			TokensPerEthUpdated(_tokensPer...
      DUP3 			TokensPerEthUpdated(_tokensPer...
      DUP2 			TokensPerEthUpdated(_tokensPer...
      MSTORE 			TokensPerEthUpdated(_tokensPer...
      PUSH 20			TokensPerEthUpdated(_tokensPer...
      ADD 			TokensPerEthUpdated(_tokensPer...
      SWAP2 			TokensPerEthUpdated(_tokensPer...
      POP 			TokensPerEthUpdated(_tokensPer...
      POP 			TokensPerEthUpdated(_tokensPer...
      PUSH 40			TokensPerEthUpdated(_tokensPer...
      MLOAD 			TokensPerEthUpdated(_tokensPer...
      DUP1 			TokensPerEthUpdated(_tokensPer...
      SWAP2 			TokensPerEthUpdated(_tokensPer...
      SUB 			TokensPerEthUpdated(_tokensPer...
      SWAP1 			TokensPerEthUpdated(_tokensPer...
      LOG1 			TokensPerEthUpdated(_tokensPer...
      POP 			function updateTokensPerEth(ui...
      JUMP [out]			function updateTokensPerEth(ui...
    tag 81			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool success
      PUSH 40			2 * 32
      PUSH 4			4
      DUP2 			size
      ADD 			size + 4
      PUSH 0			msg.data
      CALLDATASIZE 			msg.data
      SWAP1 			msg.data.length
      POP 			msg.data.length
      LT 			msg.data.length >= size + 4
      ISZERO 			msg.data.length >= size + 4
      ISZERO 			assert(msg.data.length >= size...
      ISZERO 			assert(msg.data.length >= size...
      PUSH [tag] 171			assert(msg.data.length >= size...
      JUMPI 			assert(msg.data.length >= size...
      INVALID 			assert(msg.data.length >= size...
    tag 171			assert(msg.data.length >= size...
      JUMPDEST 			assert(msg.data.length >= size...
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP5 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 173			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 173			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 2			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP4 			_amount
      GT 			_amount <= balances[msg.sender...
      ISZERO 			_amount <= balances[msg.sender...
      ISZERO 			require(_amount <= balances[ms...
      ISZERO 			require(_amount <= balances[ms...
      PUSH [tag] 174			require(_amount <= balances[ms...
      JUMPI 			require(_amount <= balances[ms...
      PUSH 0			require(_amount <= balances[ms...
      DUP1 			require(_amount <= balances[ms...
      REVERT 			require(_amount <= balances[ms...
    tag 174			require(_amount <= balances[ms...
      JUMPDEST 			require(_amount <= balances[ms...
      PUSH [tag] 175			balances[msg.sender].sub(_amou...
      DUP4 			_amount
      PUSH 2			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 133			balances[msg.sender].sub
      SWAP1 			balances[msg.sender].sub
      SWAP2 			balances[msg.sender].sub(_amou...
      SWAP1 			balances[msg.sender].sub(_amou...
      PUSH FFFFFFFF			balances[msg.sender].sub(_amou...
      AND 			balances[msg.sender].sub(_amou...
      JUMP [in]			balances[msg.sender].sub(_amou...
    tag 175			balances[msg.sender].sub(_amou...
      JUMPDEST 			balances[msg.sender].sub(_amou...
      PUSH 2			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 176			balances[_to].add(_amount)
      DUP4 			_amount
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP8 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 136			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_amount)
      SWAP1 			balances[_to].add(_amount)
      PUSH FFFFFFFF			balances[_to].add(_amount)
      AND 			balances[_to].add(_amount)
      JUMP [in]			balances[_to].add(_amount)
    tag 176			balances[_to].add(_amount)
      JUMPDEST 			balances[_to].add(_amount)
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _amo...
      AND 			Transfer(msg.sender, _to, _amo...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _amo...
      AND 			Transfer(msg.sender, _to, _amo...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _amo...
      DUP6 			_amount
      PUSH 40			Transfer(msg.sender, _to, _amo...
      MLOAD 			Transfer(msg.sender, _to, _amo...
      DUP1 			Transfer(msg.sender, _to, _amo...
      DUP3 			Transfer(msg.sender, _to, _amo...
      DUP2 			Transfer(msg.sender, _to, _amo...
      MSTORE 			Transfer(msg.sender, _to, _amo...
      PUSH 20			Transfer(msg.sender, _to, _amo...
      ADD 			Transfer(msg.sender, _to, _amo...
      SWAP2 			Transfer(msg.sender, _to, _amo...
      POP 			Transfer(msg.sender, _to, _amo...
      POP 			Transfer(msg.sender, _to, _amo...
      PUSH 40			Transfer(msg.sender, _to, _amo...
      MLOAD 			Transfer(msg.sender, _to, _amo...
      DUP1 			Transfer(msg.sender, _to, _amo...
      SWAP2 			Transfer(msg.sender, _to, _amo...
      SUB 			Transfer(msg.sender, _to, _amo...
      SWAP1 			Transfer(msg.sender, _to, _amo...
      LOG3 			Transfer(msg.sender, _to, _amo...
      PUSH 1			true
      SWAP2 			return true
      POP 			return true
      POP 			function transfer(address _to,...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 85			uint256 public constant minCon...
      JUMPDEST 			uint256 public constant minCon...
      PUSH 38D7EA4C68000			1 ether / 1000
      DUP2 			uint256 public constant minCon...
      JUMP [out]			uint256 public constant minCon...
    tag 88			bool public distributionFinish...
      JUMPDEST 			bool public distributionFinish...
      PUSH 7			bool public distributionFinish...
      PUSH 0			bool public distributionFinish...
      SWAP1 			bool public distributionFinish...
      SLOAD 			bool public distributionFinish...
      SWAP1 			bool public distributionFinish...
      PUSH 100			bool public distributionFinish...
      EXP 			bool public distributionFinish...
      SWAP1 			bool public distributionFinish...
      DIV 			bool public distributionFinish...
      PUSH FF			bool public distributionFinish...
      AND 			bool public distributionFinish...
      DUP2 			bool public distributionFinish...
      JUMP [out]			bool public distributionFinish...
    tag 91			function getTokenBalance(addre...
      JUMPDEST 			function getTokenBalance(addre...
      PUSH 0			uint
      DUP1 			AltcoinToken t
      PUSH 0			uint bal
      DUP5 			tokenAddress
      SWAP2 			AltcoinToken t = AltcoinToken(...
      POP 			AltcoinToken t = AltcoinToken(...
      DUP2 			t
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			t.balanceOf
      AND 			t.balanceOf
      PUSH 70A08231			t.balanceOf
      DUP6 			who
      PUSH 40			t.balanceOf(who)
      MLOAD 			t.balanceOf(who)
      DUP3 			t.balanceOf(who)
      PUSH FFFFFFFF			t.balanceOf(who)
      AND 			t.balanceOf(who)
      PUSH 100000000000000000000000000000000000000000000000000000000			t.balanceOf(who)
      MUL 			t.balanceOf(who)
      DUP2 			t.balanceOf(who)
      MSTORE 			t.balanceOf(who)
      PUSH 4			t.balanceOf(who)
      ADD 			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      DUP3 			t.balanceOf(who)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			t.balanceOf(who)
      AND 			t.balanceOf(who)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			t.balanceOf(who)
      AND 			t.balanceOf(who)
      DUP2 			t.balanceOf(who)
      MSTORE 			t.balanceOf(who)
      PUSH 20			t.balanceOf(who)
      ADD 			t.balanceOf(who)
      SWAP2 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      PUSH 20			t.balanceOf(who)
      PUSH 40			t.balanceOf(who)
      MLOAD 			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      DUP4 			t.balanceOf(who)
      SUB 			t.balanceOf(who)
      DUP2 			t.balanceOf(who)
      PUSH 0			t.balanceOf(who)
      DUP8 			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      EXTCODESIZE 			t.balanceOf(who)
      ISZERO 			t.balanceOf(who)
      ISZERO 			t.balanceOf(who)
      PUSH [tag] 178			t.balanceOf(who)
      JUMPI 			t.balanceOf(who)
      PUSH 0			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      REVERT 			t.balanceOf(who)
    tag 178			t.balanceOf(who)
      JUMPDEST 			t.balanceOf(who)
      GAS 			t.balanceOf(who)
      CALL 			t.balanceOf(who)
      ISZERO 			t.balanceOf(who)
      ISZERO 			t.balanceOf(who)
      PUSH [tag] 179			t.balanceOf(who)
      JUMPI 			t.balanceOf(who)
      PUSH 0			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      REVERT 			t.balanceOf(who)
    tag 179			t.balanceOf(who)
      JUMPDEST 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      PUSH 40			t.balanceOf(who)
      MLOAD 			t.balanceOf(who)
      DUP1 			t.balanceOf(who)
      MLOAD 			t.balanceOf(who)
      SWAP1 			t.balanceOf(who)
      POP 			t.balanceOf(who)
      SWAP1 			uint bal = t.balanceOf(who)
      POP 			uint bal = t.balanceOf(who)
      DUP1 			bal
      SWAP3 			return bal
      POP 			return bal
      POP 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      SWAP3 			function getTokenBalance(addre...
      SWAP2 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      POP 			function getTokenBalance(addre...
      JUMP [out]			function getTokenBalance(addre...
    tag 94			uint256 public tokensPerEth = ...
      JUMPDEST 			uint256 public tokensPerEth = ...
      PUSH 6			uint256 public tokensPerEth = ...
      SLOAD 			uint256 public tokensPerEth = ...
      DUP2 			uint256 public tokensPerEth = ...
      JUMP [out]			uint256 public tokensPerEth = ...
    tag 97			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 0			uint256
      PUSH 3			allowed
      PUSH 0			allowed[_owner]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      PUSH 0			allowed[_owner]
      KECCAK256 			allowed[_owner]
      PUSH 0			allowed[_owner][_spender]
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      PUSH 0			allowed[_owner][_spender]
      KECCAK256 			allowed[_owner][_spender]
      SLOAD 			allowed[_owner][_spender]
      SWAP1 			return allowed[_owner][_spende...
      POP 			return allowed[_owner][_spende...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      JUMP [out]			function allowance(address _ow...
    tag 100			uint256 public totalDistribute...
      JUMPDEST 			uint256 public totalDistribute...
      PUSH 5			uint256 public totalDistribute...
      SLOAD 			uint256 public totalDistribute...
      DUP2 			uint256 public totalDistribute...
      JUMP [out]			uint256 public totalDistribute...
    tag 103			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH 1			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 182			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 182			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      DUP2 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      EQ 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      ISZERO 			if (newOwner != address(0)) {\...
      PUSH [tag] 184			if (newOwner != address(0)) {\...
      JUMPI 			if (newOwner != address(0)) {\...
      DUP1 			newOwner
      PUSH 1			owner
      PUSH 0			owner
      PUSH 100			owner = newOwner
      EXP 			owner = newOwner
      DUP2 			owner = newOwner
      SLOAD 			owner = newOwner
      DUP2 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      MUL 			owner = newOwner
      NOT 			owner = newOwner
      AND 			owner = newOwner
      SWAP1 			owner = newOwner
      DUP4 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      AND 			owner = newOwner
      MUL 			owner = newOwner
      OR 			owner = newOwner
      SWAP1 			owner = newOwner
      SSTORE 			owner = newOwner
      POP 			owner = newOwner
    tag 184			if (newOwner != address(0)) {\...
      JUMPDEST 			if (newOwner != address(0)) {\...
      POP 			function transferOwnership(add...
      JUMP [out]			function transferOwnership(add...
    tag 110			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP1 			0
      DUP4 			a
      EQ 			a == 0
      ISZERO 			if (a == 0) {\n            ret...
      PUSH [tag] 186			if (a == 0) {\n            ret...
      JUMPI 			if (a == 0) {\n            ret...
      PUSH 0			0
      SWAP1 			return 0
      POP 			return 0
      PUSH [tag] 185			return 0
      JUMP 			return 0
    tag 186			if (a == 0) {\n            ret...
      JUMPDEST 			if (a == 0) {\n            ret...
      DUP2 			b
      DUP4 			a
      MUL 			a * b
      SWAP1 			c = a * b
      POP 			c = a * b
      DUP2 			b
      DUP4 			a
      DUP3 			c
      DUP2 			c / a
      ISZERO 			c / a
      ISZERO 			c / a
      PUSH [tag] 187			c / a
      JUMPI 			c / a
      INVALID 			c / a
    tag 187			c / a
      JUMPDEST 			c / a
      DIV 			c / a
      EQ 			c / a == b
      ISZERO 			assert(c / a == b)
      ISZERO 			assert(c / a == b)
      PUSH [tag] 188			assert(c / a == b)
      JUMPI 			assert(c / a == b)
      INVALID 			assert(c / a == b)
    tag 188			assert(c / a == b)
      JUMPDEST 			assert(c / a == b)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
    tag 185			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      SWAP3 			function mul(uint256 a, uint25...
      SWAP2 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      JUMP [out]			function mul(uint256 a, uint25...
    tag 114			function distr(address _to, ui...
      JUMPDEST 			function distr(address _to, ui...
      PUSH 0			bool
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      SWAP1 			distributionFinished
      SLOAD 			distributionFinished
      SWAP1 			distributionFinished
      PUSH 100			distributionFinished
      EXP 			distributionFinished
      SWAP1 			distributionFinished
      DIV 			distributionFinished
      PUSH FF			distributionFinished
      AND 			distributionFinished
      ISZERO 			!distributionFinished
      ISZERO 			require(!distributionFinished)
      ISZERO 			require(!distributionFinished)
      PUSH [tag] 190			require(!distributionFinished)
      JUMPI 			require(!distributionFinished)
      PUSH 0			require(!distributionFinished)
      DUP1 			require(!distributionFinished)
      REVERT 			require(!distributionFinished)
    tag 190			require(!distributionFinished)
      JUMPDEST 			require(!distributionFinished)
      PUSH [tag] 192			totalDistributed.add(_amount)
      DUP3 			_amount
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      PUSH [tag] 136			totalDistributed.add
      SWAP1 			totalDistributed.add
      SWAP2 			totalDistributed.add(_amount)
      SWAP1 			totalDistributed.add(_amount)
      PUSH FFFFFFFF			totalDistributed.add(_amount)
      AND 			totalDistributed.add(_amount)
      JUMP [in]			totalDistributed.add(_amount)
    tag 192			totalDistributed.add(_amount)
      JUMPDEST 			totalDistributed.add(_amount)
      PUSH 5			totalDistributed
      DUP2 			totalDistributed = totalDistri...
      SWAP1 			totalDistributed = totalDistri...
      SSTORE 			totalDistributed = totalDistri...
      POP 			totalDistributed = totalDistri...
      PUSH [tag] 193			balances[_to].add(_amount)
      DUP3 			_amount
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 136			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_amount)
      SWAP1 			balances[_to].add(_amount)
      PUSH FFFFFFFF			balances[_to].add(_amount)
      AND 			balances[_to].add(_amount)
      JUMP [in]			balances[_to].add(_amount)
    tag 193			balances[_to].add(_amount)
      JUMPDEST 			balances[_to].add(_amount)
      PUSH 2			balances
      PUSH 0			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Distr(_to, _amount)
      AND 			Distr(_to, _amount)
      PUSH 8940C4B8E215F8822C5C8F0056C12652C746CBC57EEDBD2A440B175971D47A77			Distr(_to, _amount)
      DUP4 			_amount
      PUSH 40			Distr(_to, _amount)
      MLOAD 			Distr(_to, _amount)
      DUP1 			Distr(_to, _amount)
      DUP3 			Distr(_to, _amount)
      DUP2 			Distr(_to, _amount)
      MSTORE 			Distr(_to, _amount)
      PUSH 20			Distr(_to, _amount)
      ADD 			Distr(_to, _amount)
      SWAP2 			Distr(_to, _amount)
      POP 			Distr(_to, _amount)
      POP 			Distr(_to, _amount)
      PUSH 40			Distr(_to, _amount)
      MLOAD 			Distr(_to, _amount)
      DUP1 			Distr(_to, _amount)
      SWAP2 			Distr(_to, _amount)
      SUB 			Distr(_to, _amount)
      SWAP1 			Distr(_to, _amount)
      LOG2 			Distr(_to, _amount)
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _to, _amo...
      AND 			Transfer(address(0), _to, _amo...
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _to, _amo...
      AND 			Transfer(address(0), _to, _amo...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(0), _to, _amo...
      DUP5 			_amount
      PUSH 40			Transfer(address(0), _to, _amo...
      MLOAD 			Transfer(address(0), _to, _amo...
      DUP1 			Transfer(address(0), _to, _amo...
      DUP3 			Transfer(address(0), _to, _amo...
      DUP2 			Transfer(address(0), _to, _amo...
      MSTORE 			Transfer(address(0), _to, _amo...
      PUSH 20			Transfer(address(0), _to, _amo...
      ADD 			Transfer(address(0), _to, _amo...
      SWAP2 			Transfer(address(0), _to, _amo...
      POP 			Transfer(address(0), _to, _amo...
      POP 			Transfer(address(0), _to, _amo...
      PUSH 40			Transfer(address(0), _to, _amo...
      MLOAD 			Transfer(address(0), _to, _amo...
      DUP1 			Transfer(address(0), _to, _amo...
      SWAP2 			Transfer(address(0), _to, _amo...
      SUB 			Transfer(address(0), _to, _amo...
      SWAP1 			Transfer(address(0), _to, _amo...
      LOG3 			Transfer(address(0), _to, _amo...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function distr(address _to, ui...
      SWAP2 			function distr(address _to, ui...
      POP 			function distr(address _to, ui...
      POP 			function distr(address _to, ui...
      JUMP [out]			function distr(address _to, ui...
    tag 133			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a
      DUP3 			b
      GT 			b <= a
      ISZERO 			b <= a
      ISZERO 			assert(b <= a)
      ISZERO 			assert(b <= a)
      PUSH [tag] 195			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 195			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      DUP2 			b
      DUP4 			a
      SUB 			a - b
      SWAP1 			return a - b
      POP 			return a - b
      SWAP3 			function sub(uint256 a, uint25...
      SWAP2 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      JUMP [out]			function sub(uint256 a, uint25...
    tag 136			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP2 			b
      DUP4 			a
      ADD 			a + b
      SWAP1 			c = a + b
      POP 			c = a + b
      DUP3 			a
      DUP2 			c
      LT 			c >= a
      ISZERO 			c >= a
      ISZERO 			assert(c >= a)
      ISZERO 			assert(c >= a)
      PUSH [tag] 197			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    tag 197			assert(c >= a)
      JUMPDEST 			assert(c >= a)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
      SWAP3 			function add(uint256 a, uint25...
      SWAP2 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      JUMP [out]			function add(uint256 a, uint25...
    tag 152			function doAirdrop(address _pa...
      JUMPDEST 			function doAirdrop(address _pa...
      PUSH 0			0
      DUP2 			_amount
      GT 			_amount > 0
      ISZERO 			require( _amount > 0 )
      ISZERO 			require( _amount > 0 )
      PUSH [tag] 199			require( _amount > 0 )
      JUMPI 			require( _amount > 0 )
      PUSH 0			require( _amount > 0 )
      DUP1 			require( _amount > 0 )
      REVERT 			require( _amount > 0 )
    tag 199			require( _amount > 0 )
      JUMPDEST 			require( _amount > 0 )
      PUSH 4			totalSupply
      SLOAD 			totalSupply
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      LT 			totalDistributed < totalSupply
      ISZERO 			require( totalDistributed < to...
      ISZERO 			require( totalDistributed < to...
      PUSH [tag] 200			require( totalDistributed < to...
      JUMPI 			require( totalDistributed < to...
      PUSH 0			require( totalDistributed < to...
      DUP1 			require( totalDistributed < to...
      REVERT 			require( totalDistributed < to...
    tag 200			require( totalDistributed < to...
      JUMPDEST 			require( totalDistributed < to...
      PUSH [tag] 201			balances[_participant].add(_am...
      DUP2 			_amount
      PUSH 2			balances
      PUSH 0			balances[_participant]
      DUP6 			_participant
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      SWAP1 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      PUSH 0			balances[_participant]
      KECCAK256 			balances[_participant]
      SLOAD 			balances[_participant]
      PUSH [tag] 136			balances[_participant].add
      SWAP1 			balances[_participant].add
      SWAP2 			balances[_participant].add(_am...
      SWAP1 			balances[_participant].add(_am...
      PUSH FFFFFFFF			balances[_participant].add(_am...
      AND 			balances[_participant].add(_am...
      JUMP [in]			balances[_participant].add(_am...
    tag 201			balances[_participant].add(_am...
      JUMPDEST 			balances[_participant].add(_am...
      PUSH 2			balances
      PUSH 0			balances[_participant]
      DUP5 			_participant
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      SWAP1 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      PUSH 0			balances[_participant]
      KECCAK256 			balances[_participant]
      DUP2 			balances[_participant] = balan...
      SWAP1 			balances[_participant] = balan...
      SSTORE 			balances[_participant] = balan...
      POP 			balances[_participant] = balan...
      PUSH [tag] 202			totalDistributed.add(_amount)
      DUP2 			_amount
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      PUSH [tag] 136			totalDistributed.add
      SWAP1 			totalDistributed.add
      SWAP2 			totalDistributed.add(_amount)
      SWAP1 			totalDistributed.add(_amount)
      PUSH FFFFFFFF			totalDistributed.add(_amount)
      AND 			totalDistributed.add(_amount)
      JUMP [in]			totalDistributed.add(_amount)
    tag 202			totalDistributed.add(_amount)
      JUMPDEST 			totalDistributed.add(_amount)
      PUSH 5			totalDistributed
      DUP2 			totalDistributed = totalDistri...
      SWAP1 			totalDistributed = totalDistri...
      SSTORE 			totalDistributed = totalDistri...
      POP 			totalDistributed = totalDistri...
      PUSH 4			totalSupply
      SLOAD 			totalSupply
      PUSH 5			totalDistributed
      SLOAD 			totalDistributed
      LT 			totalDistributed >= totalSuppl...
      ISZERO 			totalDistributed >= totalSuppl...
      ISZERO 			if (totalDistributed >= totalS...
      PUSH [tag] 203			if (totalDistributed >= totalS...
      JUMPI 			if (totalDistributed >= totalS...
      PUSH 1			true
      PUSH 7			distributionFinished
      PUSH 0			distributionFinished
      PUSH 100			distributionFinished = true
      EXP 			distributionFinished = true
      DUP2 			distributionFinished = true
      SLOAD 			distributionFinished = true
      DUP2 			distributionFinished = true
      PUSH FF			distributionFinished = true
      MUL 			distributionFinished = true
      NOT 			distributionFinished = true
      AND 			distributionFinished = true
      SWAP1 			distributionFinished = true
      DUP4 			distributionFinished = true
      ISZERO 			distributionFinished = true
      ISZERO 			distributionFinished = true
      MUL 			distributionFinished = true
      OR 			distributionFinished = true
      SWAP1 			distributionFinished = true
      SSTORE 			distributionFinished = true
      POP 			distributionFinished = true
    tag 203			if (totalDistributed >= totalS...
      JUMPDEST 			if (totalDistributed >= totalS...
      DUP2 			_participant
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Airdrop(_participant, _amount,...
      AND 			Airdrop(_participant, _amount,...
      PUSH ADA993AD066837289FE186CD37227AA338D27519A8A1547472ECB9831486D272			Airdrop(_participant, _amount,...
      DUP3 			_amount
      PUSH 2			balances
      PUSH 0			balances[_participant]
      DUP7 			_participant
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_participant]
      AND 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      SWAP1 			balances[_participant]
      DUP2 			balances[_participant]
      MSTORE 			balances[_participant]
      PUSH 20			balances[_participant]
      ADD 			balances[_participant]
      PUSH 0			balances[_participant]
      KECCAK256 			balances[_participant]
      SLOAD 			balances[_participant]
      PUSH 40			Airdrop(_participant, _amount,...
      MLOAD 			Airdrop(_participant, _amount,...
      DUP1 			Airdrop(_participant, _amount,...
      DUP4 			Airdrop(_participant, _amount,...
      DUP2 			Airdrop(_participant, _amount,...
      MSTORE 			Airdrop(_participant, _amount,...
      PUSH 20			Airdrop(_participant, _amount,...
      ADD 			Airdrop(_participant, _amount,...
      DUP3 			Airdrop(_participant, _amount,...
      DUP2 			Airdrop(_participant, _amount,...
      MSTORE 			Airdrop(_participant, _amount,...
      PUSH 20			Airdrop(_participant, _amount,...
      ADD 			Airdrop(_participant, _amount,...
      SWAP3 			Airdrop(_participant, _amount,...
      POP 			Airdrop(_participant, _amount,...
      POP 			Airdrop(_participant, _amount,...
      POP 			Airdrop(_participant, _amount,...
      PUSH 40			Airdrop(_participant, _amount,...
      MLOAD 			Airdrop(_participant, _amount,...
      DUP1 			Airdrop(_participant, _amount,...
      SWAP2 			Airdrop(_participant, _amount,...
      SUB 			Airdrop(_participant, _amount,...
      SWAP1 			Airdrop(_participant, _amount,...
      LOG2 			Airdrop(_participant, _amount,...
      DUP2 			_participant
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _particip...
      AND 			Transfer(address(0), _particip...
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(0), _particip...
      AND 			Transfer(address(0), _particip...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(0), _particip...
      DUP4 			_amount
      PUSH 40			Transfer(address(0), _particip...
      MLOAD 			Transfer(address(0), _particip...
      DUP1 			Transfer(address(0), _particip...
      DUP3 			Transfer(address(0), _particip...
      DUP2 			Transfer(address(0), _particip...
      MSTORE 			Transfer(address(0), _particip...
      PUSH 20			Transfer(address(0), _particip...
      ADD 			Transfer(address(0), _particip...
      SWAP2 			Transfer(address(0), _particip...
      POP 			Transfer(address(0), _particip...
      POP 			Transfer(address(0), _particip...
      PUSH 40			Transfer(address(0), _particip...
      MLOAD 			Transfer(address(0), _particip...
      DUP1 			Transfer(address(0), _particip...
      SWAP2 			Transfer(address(0), _particip...
      SUB 			Transfer(address(0), _particip...
      SWAP1 			Transfer(address(0), _particip...
      LOG3 			Transfer(address(0), _particip...
      POP 			function doAirdrop(address _pa...
      POP 			function doAirdrop(address _pa...
      JUMP [out]			function doAirdrop(address _pa...
    .data
